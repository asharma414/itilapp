{"ast":null,"code":"import _defineProperty from \"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FIND_USER, USERS_LOADING } from '../actions/types';\nconst initialState = {\n  users: [],\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FIND_USER:\n      return _objectSpread({}, state, {\n        tickets: action.payload,\n        loading: false\n      });\n\n    case USERS_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/reducers/userReducer.js"],"names":["FIND_USER","USERS_LOADING","initialState","users","loading","state","action","type","tickets","payload"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,aAApB,QAAyC,kBAAzC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,SAAL;AACI,+BACOK,KADP;AAEIG,QAAAA,OAAO,EAAEF,MAAM,CAACG,OAFpB;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKH,aAAL;AACI,+BACOI,KADP;AAEID,QAAAA,OAAO,EAAE;AAFb;;AAIJ;AACI,aAAOC,KAAP;AAbR;AAeH;AAAA","sourcesContent":["import { FIND_USER, USERS_LOADING } from '../actions/types';\n\nconst initialState = {\n    users: [],\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case FIND_USER:\n            return {\n                ...state,\n                tickets: action.payload,\n                loading: false\n            };\n        case USERS_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        default:\n            return state;\n        }\n};"]},"metadata":{},"sourceType":"module"}