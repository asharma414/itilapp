{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateTicket } from '../actions/ticketActions';\nimport { returnErrors } from '../actions/errorActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Table } from 'react-bootstrap';\n\nclass TicketPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      status: '',\n      created: '',\n      open: '',\n      updated: '',\n      title: '',\n      description: '',\n      customerName: '',\n      customerContact: '',\n      author: '',\n      newStatus: '',\n      newOpen: '',\n      comments: [],\n      loading: false,\n      newComment: '',\n      commentToggle: false,\n      errors: {}\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.ticketSubmit = async e => {\n      e.preventDefault();\n      const id = this.props.match.params.id;\n      const updatedTicket = {\n        description: this.state.description,\n        customer: {\n          name: this.state.customerName,\n          contact: this.state.customerContact\n        },\n        status: this.state.newStatus,\n        open: this.state.newOpen === 'Open' ? true : false\n      };\n      await this.props.updateTicket(id, updatedTicket);\n      window.location.reload(false);\n    };\n\n    this.commentSubmit = async e => {\n      e.preventDefault();\n      const id = this.props.match.params.id;\n      await this.props.updateTicket(id, this.state.newComment);\n      window.location.reload(false);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const id = this.props.match.params.id; //this.props.getTicket(id)\n\n    axios.get(\"/tickets/\".concat(id)).then(res => this.setState({\n      title: res.data.title,\n      status: res.data.status,\n      newStatus: res.data.status,\n      open: res.data.open === true ? 'Open' : 'Closed',\n      newOpen: res.data.open === true ? 'Open' : 'Closed',\n      created: res.data.createdAt,\n      updated: res.data.updatedAt,\n      description: res.data.description,\n      customerName: ((res.data || {}).customer || {}).name,\n      customerContact: ((res.data || {}).customer || {}).contact,\n      comments: res.data.comments,\n      author: ((res.data || {}).author || {}).name,\n      loading: false\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    const userId = this.props.auth.user;\n    console.log(userId);\n\n    if (this.state.loading === true) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Table, {\n        bordered: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Open?\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Author\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Created Date\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Last Modified\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.state.status), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.open === 'Open' ? 'Open' : 'Closed'), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.state.author), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, this.state.created.substring(0, 19)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.state.updated.substring(0, 19))))), React.createElement(Form, {\n        onSubmit: this.ticketSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Form.Control, {\n        as: \"textarea\",\n        value: this.state.description,\n        onChange: this.onChange,\n        placeholder: \"Enter ticket description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"newStatus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Status\"), React.createElement(Form.Control, {\n        as: \"select\",\n        value: this.state.newStatus,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"New\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Awaiting Customer Feedback\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"In Progress\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Cancelled\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Resolved\"))), React.createElement(Form.Group, {\n        controlId: \"newOpen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"State\"), React.createElement(Form.Control, {\n        as: \"select\",\n        value: this.state.newOpen,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Open\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Closed\"))), React.createElement(Form.Group, {\n        controlId: \"customerName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Customer Name\"), React.createElement(Form.Control, {\n        type: \"text\",\n        onChange: this.onChange,\n        value: this.state.customerName,\n        placeholder: \"Enter Customer's Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"customerContact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Customer Contact\"), React.createElement(Form.Control, {\n        type: \"text\",\n        onChange: this.onChange,\n        value: this.state.customerContact,\n        placeholder: \"Enter Customer's Contact Info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"div\", {\n        className: \"commentForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.commentSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Form.Control, {\n        as: \"textarea\",\n        value: this.state.description,\n        onChange: this.onChange,\n        placeholder: \"Enter ticket description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })))), this.state.comments.map(comment => React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nTicketPage.propTypes = {\n  updateTicket: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  returnErrors,\n  updateTicket\n})(TicketPage);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js"],"names":["axios","React","Component","connect","updateTicket","returnErrors","PropTypes","Form","Button","Table","TicketPage","state","status","created","open","updated","title","description","customerName","customerContact","author","newStatus","newOpen","comments","loading","newComment","commentToggle","errors","onChange","e","setState","target","id","value","ticketSubmit","preventDefault","props","match","params","updatedTicket","customer","name","contact","window","location","reload","commentSubmit","componentDidMount","get","then","res","data","createdAt","updatedAt","catch","err","console","log","render","userId","auth","user","substring","map","comment","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateTicket } from '../actions/ticketActions';\nimport { returnErrors } from '../actions/errorActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Table } from 'react-bootstrap';\n\n\nclass TicketPage extends Component {\n    state = {\n        status: '',\n        created: '',\n        open: '',\n        updated: '',\n        title: '',\n        description: '',\n        customerName: '',\n        customerContact: '',\n        author: '',\n        newStatus: '',\n        newOpen: '',\n        comments:  [],\n        loading: false,\n        newComment: '',\n        commentToggle: false,\n        errors: {}\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true })\n        const { id } = this.props.match.params;\n         //this.props.getTicket(id)\n        axios\n            .get(`/tickets/${id}`)\n            .then(res => \n                this.setState({\n                    title: res.data.title,\n                    status: res.data.status,\n                    newStatus: res.data.status,\n                    open: (res.data.open === true) ? 'Open' : 'Closed',\n                    newOpen: (res.data.open === true) ? 'Open' : 'Closed',\n                    created: res.data.createdAt,\n                    updated: res.data.updatedAt,\n                    description: res.data.description,\n                    customerName: ((res.data || {}).customer || {}).name,\n                    customerContact: ((res.data || {}).customer || {}).contact,\n                    comments: res.data.comments,\n                    author: ((res.data || {}).author || {}).name,\n                    loading: false\n                })\n            )\n            .catch(err => \n                console.log(err)\n        );\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.id] : e.target.value })\n    }\n\n    ticketSubmit = async (e) => {\n        e.preventDefault();\n        const { id } = this.props.match.params;\n        const updatedTicket = {\n            description: this.state.description,\n            customer: {\n                name: this.state.customerName,\n                contact: this.state.customerContact\n            },\n            status: this.state.newStatus,\n            open: (this.state.newOpen === 'Open') ? true : false\n        }\n        await this.props.updateTicket(id, updatedTicket);\n        window.location.reload(false);\n    }\n\n    commentSubmit = async (e) => {\n        e.preventDefault();\n        const { id } = this.props.match.params;\n        \n        await this.props.updateTicket(id, this.state.newComment);\n        window.location.reload(false);\n    }\n\n    render() {\n        const userId = this.props.auth.user\n        console.log(userId);\n        if (this.state.loading === true) {\n            return (\n                <div>Loading...</div>\n            )\n        } else {\n            return (\n                <div>\n                    <Table bordered hover>\n                        <thead>\n                            <tr>\n                                <td>Title</td>\n                                <td>Status</td>\n                                <td>Open?</td>\n                                <td>Author</td> \n                                <td>Created Date</td>\n                                <td>Last Modified</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>{this.state.title}</td>\n                                <td>{this.state.status}</td>\n                                <td>{(this.state.open === 'Open') ? 'Open' : 'Closed'}</td>\n                                <td>{this.state.author}</td>\n                                <td>{this.state.created.substring(0,19)}</td>\n                                <td>{this.state.updated.substring(0,19)}</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                    <Form onSubmit={this.ticketSubmit}>\n                    <Form.Group controlId=\"description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control as='textarea' value={this.state.description} onChange={this.onChange} placeholder=\"Enter ticket description\" />\n                    </Form.Group>\n                    <Form.Group controlId='newStatus'>\n                        <Form.Label>Status</Form.Label>\n                        <Form.Control as='select' value={this.state.newStatus} onChange={this.onChange}>\n                            <option>New</option>\n                            <option>Awaiting Customer Feedback</option>\n                            <option>In Progress</option>\n                            <option>Cancelled</option>\n                            <option>Resolved</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='newOpen'>\n                        <Form.Label>State</Form.Label>\n                        <Form.Control as='select' value={this.state.newOpen} onChange={this.onChange}>\n                            <option>Open</option>\n                            <option>Closed</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"customerName\">\n                        <Form.Label>Customer Name</Form.Label>\n                        <Form.Control type='text' onChange={this.onChange} value={this.state.customerName} placeholder=\"Enter Customer's Name\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"customerContact\">\n                        <Form.Label>Customer Contact</Form.Label>\n                        <Form.Control type='text' onChange={this.onChange} value={this.state.customerContact} placeholder=\"Enter Customer's Contact Info\" />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                    </Form>\n                    <div className='commentForm'>\n                        <Form onSubmit={this.commentSubmit}>\n                        <Form.Group controlId=\"comment\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control as='textarea' value={this.state.description} onChange={this.onChange} placeholder=\"Enter ticket description\" />\n                        </Form.Group>\n                        </Form>\n                    </div>\n                {this.state.comments.map(comment => \n                    <table>\n                        <tr></tr>\n                    </table>\n                )}\n                </div>\n            )\n        }\n    }\n}\n\nTicketPage.propTypes = {\n    updateTicket: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { returnErrors, updateTicket })(TicketPage)"]},"metadata":{},"sourceType":"module"}