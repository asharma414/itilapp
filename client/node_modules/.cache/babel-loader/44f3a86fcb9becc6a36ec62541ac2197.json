{"ast":null,"code":"import _regeneratorRuntime from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/inherits\";import axios from'axios';import React,{Component}from'react';import{connect}from'react-redux';import{updateTicket}from'../actions/ticketActions';import{returnErrors}from'../actions/errorActions';import{addComment}from'../actions/commentActions';import{findUser}from'../actions/userActions';import LoadingScreen from'./loadingscreen';import{Form,Button,Table,Row,Col}from'react-bootstrap';import dompurify from'dompurify';import moment from'moment';var sanitizer=dompurify.sanitize;var TicketPage=/*#__PURE__*/function(_Component){_inherits(TicketPage,_Component);function TicketPage(){var _getPrototypeOf2;var _this;_classCallCheck(this,TicketPage);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(TicketPage)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={status:'',created:'',open:'',updated:'',title:'',description:'',customerName:'',customerContact:'',author:'',newStatus:'',newOpen:'',comments:[],loading:false,commentText:'',assignedTo:'',commentToggle:false,errors:{}};_this.onChange=function(e){_this.setState(_defineProperty({},e.target.id,e.target.value));};_this.commentPost=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(text){var id,userId,username,newComment;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:id=_this.props.match.params.id;userId=_this.props.auth.user.id;username=_this.props.auth.user.name;newComment={text:text,author:{id:userId,name:username}};_context.next=6;return _this.props.addComment(id,newComment);case 6:_this.getTicket();case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.ticketSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var users,userArr,assignedToIndex,id,updatedTicket;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();users=_this.props.user.users;userArr=users.map(function(user){return user.name;});if(!userArr.includes(_this.state.assignedTo)){_context2.next=14;break;}assignedToIndex=userArr.indexOf(_this.state.assignedTo);id=_this.props.match.params.id;if(_this.state.newStatus!==_this.state.status){_this.commentPost(\"Status is <em>\".concat(_this.state.newStatus,\"</em> was <em>\").concat(_this.state.status,\"</em>\"));}if(_this.state.newOpen!==_this.state.open){_this.commentPost(\"State is <em>\".concat(_this.state.newOpen,\"</em> was <em>\").concat(_this.state.open,\"</em>\"));}updatedTicket={description:_this.state.description,customer:{name:_this.state.customerName,contact:_this.state.customerContact},status:_this.state.newStatus,open:_this.state.newOpen==='Open'?true:false,assignedTo:{id:users[assignedToIndex]._id,name:_this.state.assignedTo}};_context2.next=11;return _this.props.updateTicket(id,updatedTicket);case 11:_this.getTicket();_context2.next=15;break;case 14:alert('Invalid assigned to user');case 15:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();_this.commentSubmit=function(e){e.preventDefault();_this.commentPost(_this.state.commentText);};return _this;}_createClass(TicketPage,[{key:\"getTicket\",value:function getTicket(){var _this2=this;var id=this.props.match.params.id;axios.get(\"/api/tickets/\".concat(id)).then(function(res){return _this2.setState({title:res.data.title,status:res.data.status,newStatus:res.data.status,open:res.data.open===true?'Open':'Closed',newOpen:res.data.open===true?'Open':'Closed',created:res.data.createdAt,updated:res.data.updatedAt,description:res.data.description,customerName:((res.data||{}).customer||{}).name,customerContact:((res.data||{}).customer||{}).contact,comments:res.data.comments,author:((res.data||{}).author||{}).name,assignedTo:((res.data||{}).assignedTo||{}).name,loading:false});}).catch(function(err){return console.log(err);});}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.props.errors){this.setState({errors:this.props.errors});}this.props.findUser();this.getTicket();this.setState({loading:true});}},{key:\"render\",value:function render(){var users=this.props.user.users;var loading=this.props.user.loading;if(this.state.loading===true&&loading===true){return React.createElement(\"div\",{className:\"container\"},React.createElement(LoadingScreen,null));}else{return React.createElement(\"div\",{className:\"container\"},React.createElement(\"datalist\",{id:\"datalist1\"},users.map(function(user){return React.createElement(\"option\",{key:user._id,value:user.name});})),React.createElement(Table,{className:\"my-4\",bordered:true,hover:true,responsive:\"md\"},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"td\",null,\"Title\"),React.createElement(\"td\",null,\"Status\"),React.createElement(\"td\",null,\"Open?\"),React.createElement(\"td\",null,\"Author\"),React.createElement(\"td\",null,\"Created\"),React.createElement(\"td\",null,\"Last Modified\"))),React.createElement(\"tbody\",null,React.createElement(\"tr\",null,React.createElement(\"td\",null,this.state.title),React.createElement(\"td\",null,this.state.status),React.createElement(\"td\",null,this.state.open==='Open'?'Open':'Closed'),React.createElement(\"td\",null,this.state.author),React.createElement(\"td\",null,this.state.created.substring(0,19)),React.createElement(\"td\",null,this.state.updated.substring(0,19))))),React.createElement(Form,{onSubmit:this.ticketSubmit},React.createElement(Row,null,React.createElement(Col,null,React.createElement(Form.Group,{controlId:\"customerName\"},React.createElement(Form.Label,null,\"Customer Name\"),React.createElement(Form.Control,{type:\"text\",onChange:this.onChange,value:this.state.customerName,placeholder:\"Customer's Name\"}))),React.createElement(Col,null,React.createElement(Form.Group,{controlId:\"customerContact\"},React.createElement(Form.Label,null,\"Customer Contact\"),React.createElement(Form.Control,{type:\"text\",onChange:this.onChange,value:this.state.customerContact,placeholder:\"Customer's Contact Info\"})))),React.createElement(Row,null,React.createElement(Col,null,React.createElement(Form.Group,{controlId:\"newStatus\"},React.createElement(Form.Label,null,\"Status\"),React.createElement(Form.Control,{as:\"select\",value:this.state.newStatus,onChange:this.onChange},React.createElement(\"option\",null,\"New\"),React.createElement(\"option\",null,\"Awaiting Customer Feedback\"),React.createElement(\"option\",null,\"In Progress\"),React.createElement(\"option\",null,\"Cancelled\"),React.createElement(\"option\",null,\"Resolved\")))),React.createElement(Col,null,React.createElement(Form.Group,{controlId:\"newOpen\"},React.createElement(Form.Label,null,\"State\"),React.createElement(Form.Control,{as:\"select\",value:this.state.newOpen,onChange:this.onChange},React.createElement(\"option\",null,\"Open\"),React.createElement(\"option\",null,\"Closed\"))))),React.createElement(Form.Group,{controlId:\"assignedTo\"},React.createElement(Form.Label,null,\"Assigned To\"),React.createElement(Form.Control,{list:\"datalist1\",type:\"text\",value:this.state.assignedTo,onChange:this.onChange,required:true,placeholder:\"Assign ticket to user\"})),React.createElement(Form.Group,{controlId:\"description\"},React.createElement(Form.Label,null,\"Description\"),React.createElement(Form.Control,{as:\"textarea\",value:this.state.description,onChange:this.onChange,required:true,placeholder:\"Ticket description\"})),React.createElement(Button,{variant:\"outline-primary\",type:\"submit\"},\"Submit\")),React.createElement(\"div\",{className:\"my-4 commentForm\"},React.createElement(Form,{onSubmit:this.commentSubmit},React.createElement(Form.Group,{controlId:\"commentText\"},React.createElement(Form.Label,null,\"New Comment\"),React.createElement(Form.Control,{as:\"textarea\",value:this.state.newComment,onChange:this.onChange,placeholder:\"Enter ticket description\"})),React.createElement(Button,{variant:\"outline-secondary\",type:\"submit\"},\"Post Comment\"))),this.state.comments.map(function(comment){return React.createElement(\"div\",{key:comment._id,className:\"mt-3 card-footer\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-md-12\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"col-md-9\"},React.createElement(\"strong\",null,comment.author.name)),React.createElement(\"div\",{className:\"text-right col-md-3\"},moment(comment.createdAt).fromNow())),React.createElement(\"p\",{dangerouslySetInnerHTML:{__html:sanitizer(comment.text)}}))));}));}}}]);return TicketPage;}(Component);var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,errors:state.errors,user:state.user};};export default connect(mapStateToProps,{returnErrors:returnErrors,updateTicket:updateTicket,addComment:addComment,findUser:findUser})(TicketPage);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js"],"names":["axios","React","Component","connect","updateTicket","returnErrors","addComment","findUser","LoadingScreen","Form","Button","Table","Row","Col","dompurify","moment","sanitizer","sanitize","TicketPage","state","status","created","open","updated","title","description","customerName","customerContact","author","newStatus","newOpen","comments","loading","commentText","assignedTo","commentToggle","errors","onChange","e","setState","target","id","value","commentPost","text","props","match","params","userId","auth","user","username","name","newComment","getTicket","ticketSubmit","preventDefault","users","userArr","map","includes","assignedToIndex","indexOf","updatedTicket","customer","contact","_id","alert","commentSubmit","get","then","res","data","createdAt","updatedAt","catch","err","console","log","substring","comment","fromNow","__html","mapStateToProps"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateTicket } from '../actions/ticketActions';\nimport { returnErrors } from '../actions/errorActions';\nimport { addComment } from '../actions/commentActions';\nimport { findUser } from '../actions/userActions';\nimport PropTypes from 'prop-types';\nimport LoadingScreen from './loadingscreen';\nimport { Form, Button, Table, Row, Col } from 'react-bootstrap';\nimport dompurify from 'dompurify';\nimport moment from 'moment';\nconst sanitizer = dompurify.sanitize;\n\nclass TicketPage extends Component {\n    state = {\n        status: '',\n        created: '',\n        open: '',\n        updated: '',\n        title: '',\n        description: '',\n        customerName: '',\n        customerContact: '',\n        author: '',\n        newStatus: '',\n        newOpen: '',\n        comments:  [],\n        loading: false,\n        commentText: '',\n        assignedTo: '',\n        commentToggle: false,\n        errors: {}\n    }\n\n    getTicket() {\n        const { id } = this.props.match.params;\n        axios\n            .get(`/api/tickets/${id}`)\n            .then(res => \n                this.setState({\n                    title: res.data.title,\n                    status: res.data.status,\n                    newStatus: res.data.status,\n                    open: (res.data.open === true) ? 'Open' : 'Closed',\n                    newOpen: (res.data.open === true) ? 'Open' : 'Closed',\n                    created: res.data.createdAt,\n                    updated: res.data.updatedAt,\n                    description: res.data.description,\n                    customerName: ((res.data || {}).customer || {}).name,\n                    customerContact: ((res.data || {}).customer || {}).contact,\n                    comments: res.data.comments,\n                    author: ((res.data || {}).author || {}).name,\n                    assignedTo: ((res.data || {}).assignedTo || {}).name,\n                    loading: false\n                })\n            )\n            .catch(err => \n                console.log(err)\n        );\n    }\n\n    componentDidMount() {\n        if (this.props.errors) {\n            this.setState({ errors: this.props.errors })\n        }\n        this.props.findUser();\n        this.getTicket();\n        this.setState({ loading: true })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.id] : e.target.value })\n    }\n\n    commentPost = async (text) => {\n        const { id } = this.props.match.params;\n        const userId = this.props.auth.user.id;\n        const username = this.props.auth.user.name;\n        const newComment = {\n            text: text,\n            author: {\n                id: userId,\n                name: username\n            }\n        }\n        await this.props.addComment(id, newComment);\n        this.getTicket();\n    }\n\n    ticketSubmit = async (e) => {\n        e.preventDefault();\n        const { users } = this.props.user;\n        let userArr = users.map(user => user.name);\n        if (userArr.includes(this.state.assignedTo)){\n            let assignedToIndex = userArr.indexOf(this.state.assignedTo)\n            const { id } = this.props.match.params;\n            if (this.state.newStatus !== this.state.status) {\n                this.commentPost(`Status is <em>${this.state.newStatus}</em> was <em>${this.state.status}</em>`)\n            }\n            if (this.state.newOpen !== this.state.open) {\n                this.commentPost(`State is <em>${this.state.newOpen}</em> was <em>${this.state.open}</em>`)\n            }\n            const updatedTicket = {\n                description: this.state.description,\n                customer: {\n                    name: this.state.customerName,\n                    contact: this.state.customerContact\n                },\n                status: this.state.newStatus,\n                open: (this.state.newOpen === 'Open') ? true : false,\n                assignedTo: {\n                    id: users[assignedToIndex]._id,\n                    name: this.state.assignedTo\n                }\n            }\n            await this.props.updateTicket(id, updatedTicket);\n            this.getTicket();\n        } else {\n            alert('Invalid assigned to user')\n        }\n    }\n\n    commentSubmit = (e) => {\n        e.preventDefault();\n        this.commentPost(this.state.commentText)\n    }\n\n    render() {\n        const { users } = this.props.user;\n        const { loading } = this.props.user;\n        if (this.state.loading === true && loading === true) {\n            return (\n                <div className='container'>\n                    <LoadingScreen />\n                </div>\n            )\n        } else {\n            return (\n                <div className='container'>\n                <datalist id='datalist1'>\n                {\n                    users.map(user => (\n                        <option key={user._id} value={user.name}></option>\n                ))}\n                </datalist>\n                    <Table className='my-4' bordered hover responsive='md'>\n                        <thead>\n                            <tr>\n                                <td>Title</td>\n                                <td>Status</td>\n                                <td>Open?</td>\n                                <td>Author</td> \n                                <td>Created</td>\n                                <td>Last Modified</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>{this.state.title}</td>\n                                <td>{this.state.status}</td>\n                                <td>{(this.state.open === 'Open') ? 'Open' : 'Closed'}</td>\n                                <td>{this.state.author}</td>\n                                <td>{this.state.created.substring(0,19)}</td>\n                                <td>{this.state.updated.substring(0,19)}</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                    <Form onSubmit={this.ticketSubmit}>\n                        <Row>\n                            <Col>\n                                <Form.Group controlId=\"customerName\">\n                                    <Form.Label>Customer Name</Form.Label>\n                                    <Form.Control type='text' onChange={this.onChange} value={this.state.customerName} placeholder=\"Customer's Name\" />\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group controlId=\"customerContact\">\n                                    <Form.Label>Customer Contact</Form.Label>\n                                    <Form.Control type='text' onChange={this.onChange} value={this.state.customerContact} placeholder=\"Customer's Contact Info\" />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group controlId='newStatus'>\n                                    <Form.Label>Status</Form.Label>\n                                    <Form.Control as='select' value={this.state.newStatus} onChange={this.onChange}>\n                                        <option>New</option>\n                                        <option>Awaiting Customer Feedback</option>\n                                        <option>In Progress</option>\n                                        <option>Cancelled</option>\n                                        <option>Resolved</option>\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group controlId='newOpen'>\n                                    <Form.Label>State</Form.Label>\n                                    <Form.Control as='select' value={this.state.newOpen} onChange={this.onChange}>\n                                        <option>Open</option>\n                                        <option>Closed</option>\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Form.Group controlId='assignedTo'>\n                            <Form.Label>Assigned To</Form.Label>\n                            <Form.Control  list='datalist1' type='text' value={this.state.assignedTo} onChange={this.onChange} required placeholder='Assign ticket to user' />\n                        </Form.Group>\n                        <Form.Group controlId='description'>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control as='textarea' value={this.state.description} onChange={this.onChange} required placeholder=\"Ticket description\" />\n                        </Form.Group>\n                        <Button variant='outline-primary' type='submit'>Submit</Button>\n                    </Form>\n                    <div className='my-4 commentForm'>\n                        <Form onSubmit={this.commentSubmit}>\n                        <Form.Group controlId='commentText'>\n                            <Form.Label>New Comment</Form.Label>\n                            <Form.Control as='textarea' value={this.state.newComment} onChange={this.onChange} placeholder=\"Enter ticket description\" />\n                        </Form.Group>\n                        <Button variant='outline-secondary' type='submit'>Post Comment</Button>\n                        </Form>\n                    </div>\n                        {this.state.comments.map(comment =>\n                            <div key={comment._id} className='mt-3 card-footer'> \n                                <div className='row'>\n                                        <div className='col-md-12'>\n                                            <div className='row'>\n                                                <div className='col-md-9'><strong>{comment.author.name}</strong></div>\n                                                <div className='text-right col-md-3'>{moment(comment.createdAt).fromNow()}</div>\n                                            </div>\n                                            <p dangerouslySetInnerHTML={{__html: sanitizer(comment.text)}}></p>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n            )\n        }\n    }\n}\n\nTicketPage.propTypes = {\n    updateTicket: PropTypes.func.isRequired,\n    addComment: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired,\n    findUser: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors,\n    user: state.user\n});\n\nexport default connect(mapStateToProps, { returnErrors, updateTicket, addComment, findUser })(TicketPage)"]},"metadata":{},"sourceType":"module"}