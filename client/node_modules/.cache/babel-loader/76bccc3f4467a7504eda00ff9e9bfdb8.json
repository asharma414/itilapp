{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/auth/login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { loginUser } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\nimport PropTypes from 'prop-types';\nimport { Button, Form } from 'react-bootstrap';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData);\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/tickets');\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.auth.isAuthenticated) {\n      nextProps.clearErrors();\n      nextProps.history.push('/tickets'); // push user to dashboard when they login\n    }\n\n    ;\n    return null;\n  }\n\n  render() {\n    const {\n      errors\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 65\n      }\n    }, \"Register\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 23\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }\n    }, \"     \", errors.email, errors.emailnotfound), /*#__PURE__*/React.createElement(Form.Control, {\n      value: this.state.email,\n      onChange: this.onChange,\n      type: \"email\",\n      error: errors.email,\n      autoComplete: \"email\",\n      placeholder: \"Enter email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }\n    }, \"     \", errors.password, errors.passwordincorrect, errors.activated), /*#__PURE__*/React.createElement(Form.Control, {\n      onChange: this.onChange,\n      type: \"password\",\n      error: errors.password,\n      autoComplete: \"current-password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"      \", errors.activated), /*#__PURE__*/React.createElement(Form.Control, {\n      error: errors.activated,\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"Login\")))));\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  clearErrors,\n  loginUser\n})(Login);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/auth/login.js"],"names":["React","Component","connect","Link","loginUser","clearErrors","PropTypes","Button","Form","Login","state","email","password","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","props","componentDidMount","auth","isAuthenticated","history","push","getDerivedStateFromProps","nextProps","prevState","render","errors","emailnotfound","passwordincorrect","activated","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { loginUser } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\nimport PropTypes from 'prop-types';\nimport { Button, Form } from 'react-bootstrap';\n\n\nclass Login extends Component {\n        state = {\n          email: '',\n          password: ''\n        };\n\n      componentDidMount() {\n        // If logged in and user navigates to Login page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n          this.props.history.push('/tickets');\n        }\n      }\n      \n      static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.auth.isAuthenticated) {\n          nextProps.clearErrors();\n          nextProps.history.push('/tickets'); // push user to dashboard when they login\n        };\n        return null;\n      }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n      };\n    onSubmit = e => {\n        e.preventDefault();\n    const userData = {\n          email: this.state.email,\n          password: this.state.password,\n        };\n        this.props.loginUser(userData);\n      };\n\n    render() {\n        const { errors } = this.props;\n        return (\n            <div className='container mt-4'>\n              <p className='text-center'>Don't have an account? <Link to='/register'>Register</Link></p>\n              <div className='d-flex justify-content-center'>\n                  <Form onSubmit={this.onSubmit}>\n                  <Form.Group controlId='email'>\n                      <Form.Label>Email address</Form.Label>\n                      <span className='text-danger'>     {errors.email}{errors.emailnotfound}</span>\n                      <Form.Control value={this.state.email} onChange={this.onChange} type='email' error={errors.email} autoComplete='email' placeholder=\"Enter email\" />\n                  </Form.Group>\n                  <Form.Group controlId=\"password\">\n                      <Form.Label>Password</Form.Label>\n                      <span className='text-danger'>     {errors.password}{errors.passwordincorrect}{errors.activated}</span>\n                      <Form.Control onChange={this.onChange} type='password' error={errors.password} autoComplete='current-password' placeholder=\"Password\" />\n                  </Form.Group>\n                  <Form.Group>\n                    <span className='text-danger'>      {errors.activated}</span>\n                    <Form.Control error={errors.activated} variant=\"primary\" type=\"submit\">Login</Form.Control>\n                  </Form.Group>\n                </Form>\n              </div>\n          </div>\n        )\n    }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { clearErrors, loginUser }\n)(Login);"]},"metadata":{},"sourceType":"module"}