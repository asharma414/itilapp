{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/ticketlist.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTickets } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nclass TicketList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showDetails = path => {\n      this.props.history.push(path);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getTickets();\n  }\n\n  render() {\n    const tickets = this.props.ticket.tickets;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Open?\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Author\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Created Date\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Last Modified\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, tickets.map(ticket => React.createElement(\"tr\", {\n      key: ticket._id,\n      onClick: () => this.showDetails(\"/\".concat(ticket._id)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, ticket.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, ticket.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, ticket.status), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, ticket.open === true ? 'Open' : 'Closed'), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, ticket.author.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, ticket.createdAt.substring(0, 19)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, ticket.updatedAt.substring(0, 19)))))), this.onClick);\n  }\n\n}\n\nTicketList.propTypes = {\n  getTickets: PropTypes.func.isRequired,\n  ticket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, {\n  getTickets\n})(withRouter(TicketList));","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/ticketlist.js"],"names":["React","Component","connect","getTickets","PropTypes","withRouter","TicketList","showDetails","path","props","history","push","componentDidMount","render","tickets","ticket","map","_id","title","description","status","open","author","name","createdAt","substring","updatedAt","onClick","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAK/BM,WAL+B,GAKhBC,IAAD,IAAU;AACpB,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwBH,IAAxB;AACH,KAP8B;AAAA;;AAC/BI,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWN,UAAX;AACH;;AAMDU,EAAAA,MAAM,GAAG;AAAA,UACGC,OADH,GACe,KAAKL,KAAL,CAAWM,MAD1B,CACGD,OADH;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPJ,CADJ,CADJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCA,OAAO,CAACE,GAAR,CAAYD,MAAM,IACf;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACE,GAAhB;AAAqB,MAAA,OAAO,EAAE,MAAM,KAAKV,WAAL,YAAqBQ,MAAM,CAACE,GAA5B,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,MAAM,CAACG,KAAZ,CADR,EAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,MAAM,CAACI,WAAZ,CAFR,EAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,MAAM,CAACK,MAAZ,CAHR,EAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAML,MAAM,CAACM,IAAP,KAAgB,IAAjB,GAAyB,MAAzB,GAAkC,QAAvC,CAJR,EAKQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,MAAM,CAACO,MAAP,CAAcC,IAAnB,CALR,EAMQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKR,MAAM,CAACS,SAAP,CAAiBC,SAAjB,CAA2B,CAA3B,EAA6B,EAA7B,CAAL,CANR,EAOQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKV,MAAM,CAACW,SAAP,CAAiBD,SAAjB,CAA2B,CAA3B,EAA6B,EAA7B,CAAL,CAPR,CADH,CADD,CAZJ,CADJ,EA2BK,KAAKE,OA3BV,CADJ;AA+BH;;AA1C8B;;AA6CnCrB,UAAU,CAACsB,SAAX,GAAuB;AACnBzB,EAAAA,UAAU,EAAEC,SAAS,CAACyB,IAAV,CAAeC,UADR;AAEnBf,EAAAA,MAAM,EAAEX,SAAS,CAAC2B,MAAV,CAAiBD;AAFN,CAAvB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChClB,EAAAA,MAAM,EAAEkB,KAAK,CAAClB;AADkB,CAAZ,CAAxB;;AAIA,eAAeb,OAAO,CAAC8B,eAAD,EAAkB;AAAE7B,EAAAA;AAAF,CAAlB,CAAP,CAAyCE,UAAU,CAACC,UAAD,CAAnD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTickets } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nclass TicketList extends Component {\n    componentDidMount() {\n        this.props.getTickets();\n    }\n\n    showDetails = (path) => {\n        this.props.history.push(path);\n    }\n\n    render() {\n        const { tickets } = this.props.ticket;\n        return (\n            <div>\n                <table>\n                    <thead>\n                        <tr>\n                            <td>Title</td>\n                            <td>Description</td>\n                            <td>Status</td>\n                            <td>Open?</td>\n                            <td>Author</td> \n                            <td>Created Date</td>\n                            <td>Last Modified</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {tickets.map(ticket => (\n                        <tr key={ticket._id} onClick={() => this.showDetails(`/${ticket._id}`)}>\n                                <td>{ticket.title}</td>\n                                <td>{ticket.description}</td>\n                                <td>{ticket.status}</td>\n                                <td>{(ticket.open === true) ? 'Open' : 'Closed'}</td>\n                                <td>{ticket.author.name}</td>\n                                <td>{ticket.createdAt.substring(0,19)}</td>\n                                <td>{ticket.updatedAt.substring(0,19)}</td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n                {this.onClick}\n            </div>\n        );\n    }\n}\n\nTicketList.propTypes = {\n    getTickets: PropTypes.func.isRequired,\n    ticket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, { getTickets })(withRouter(TicketList))"]},"metadata":{},"sourceType":"module"}