{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTicket } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\n\nclass TicketPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      errors: {}\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.defaultValue\n      });\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.getTicket(id);\n  }\n\n  render() {\n    const details = this.props.ticket.tickets;\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Form.Control, {\n      type: \"text\",\n      value: details.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      defaultValue: details.description,\n      onChange: this.onChange,\n      placeholder: \"Enter ticket description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"customerName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Customer Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      defaultValue: ((details || {}).customer || {}).name,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"customerContact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Customer Contact\"), React.createElement(Form.Control, {\n      type: \"text\",\n      defaultValue: ((details || {}).customer || {}).contact,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Form.Control, {\n      type: \"text\",\n      value: ((details || {}).author || {}).name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nTicketPage.propTypes = {\n  getTicket: PropTypes.func.isRequired,\n  ticket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, {\n  getTicket\n})(TicketPage);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js"],"names":["React","Component","connect","getTicket","PropTypes","Form","Button","TicketPage","state","title","errors","onChange","e","setState","target","id","defaultValue","componentDidMount","props","match","params","render","details","ticket","tickets","description","customer","name","contact","author","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTicket } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\n\n\nclass TicketPage extends Component {\n    state = {\n        title: '',\n        errors: {}\n    }\n\n    componentDidMount() {\n         const { id } = this.props.match.params;\n         this.props.getTicket(id)\n    }\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.id] : e.target.defaultValue })\n    }\n\n    render() {\n        const details = this.props.ticket.tickets\n        return (\n            <Form>\n            <Form.Group controlId=\"title\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control type=\"text\" value={details.title} />\n            </Form.Group>\n            <Form.Group controlId=\"description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control as='textarea' defaultValue={details.description} onChange={this.onChange} placeholder=\"Enter ticket description\" />\n            </Form.Group>\n            <Form.Group controlId=\"customerName\">\n                <Form.Label>Customer Name</Form.Label>\n                <Form.Control type=\"text\" defaultValue={((details || {}).customer || {}).name} onChange={this.onChange} />\n            </Form.Group>\n            <Form.Group controlId=\"customerContact\">\n                <Form.Label>Customer Contact</Form.Label>\n                <Form.Control type=\"text\" defaultValue={((details || {}).customer || {}).contact} onChange={this.onChange} />\n            </Form.Group>\n            <Form.Group controlId=\"author\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control type=\"text\" value={((details || {}).author || {}).name}  />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n}\n\nTicketPage.propTypes = {\n    getTicket: PropTypes.func.isRequired,\n    ticket: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, { getTicket })(TicketPage)"]},"metadata":{},"sourceType":"module"}