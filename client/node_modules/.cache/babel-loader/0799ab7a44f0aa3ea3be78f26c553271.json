{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/auth/login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/authActions';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Button, Form } from 'react-bootstrap';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData);\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/tickets');\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/tickets'); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"     \", errors.email, errors.emailnotfound), React.createElement(Form.Control, {\n      value: this.state.email,\n      onChange: this.onChange,\n      type: \"email\",\n      error: errors.email,\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"     \", errors.password, errors.passwordincorrect), React.createElement(Form.Control, {\n      onChange: this.onChange,\n      type: \"password\",\n      error: errors.password,\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/auth/login.js"],"names":["React","Component","Link","connect","loginUser","classnames","PropTypes","Button","Form","Login","constructor","props","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","email","state","password","errors","componentDidMount","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","render","emailnotfound","passwordincorrect","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/authActions';\nimport classnames from 'classnames'\nimport PropTypes from 'prop-types';\nimport { Button, Form } from 'react-bootstrap';\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          email: '',\n          password: '',\n          errors: {}\n        };\n      }\n\n      componentDidMount() {\n        // If logged in and user navigates to Login page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n          this.props.history.push('/tickets');\n        }\n      }\n\n      componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n          this.props.history.push('/tickets'); // push user to dashboard when they login\n        }\n        if (nextProps.errors) {\n          this.setState({\n            errors: nextProps.errors\n          });\n        }\n      }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n      };\n    onSubmit = e => {\n        e.preventDefault();\n    const userData = {\n          email: this.state.email,\n          password: this.state.password,\n        };\n        this.props.loginUser(userData);\n      };\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <Form onSubmit={this.onSubmit}>\n            <Form.Group controlId='email'>\n                <Form.Label>Email address</Form.Label>\n                <span className='red-text'>     {errors.email}{errors.emailnotfound}</span>\n                <Form.Control value={this.state.email} onChange={this.onChange} type='email' error={errors.email} placeholder=\"Enter email\" />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <span className='red-text'>     {errors.password}{errors.passwordincorrect}</span>\n                <Form.Control onChange={this.onChange} type='password' error={errors.password} placeholder=\"Password\" />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        )\n    }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);"]},"metadata":{},"sourceType":"module"}