{"ast":null,"code":"import _defineProperty from \"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { DELETE_TICKET, GET_TICKETS, TICKETS_LOADING } from '../actions/types';\nconst initialState = {\n  tickets: [],\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_TICKETS:\n      return _objectSpread({}, state, {\n        tickets: action.payload,\n        loading: false\n      });\n\n    case DELETE_TICKET:\n      return _objectSpread({}, state, {\n        tickets: state.tickets.filter(ticket => ticket._id !== action.payload)\n      });\n    // case ADD_TICKET:\n    //     return {\n    //         ...state,\n    //         tickets: [action.payload, ...state.tickets]\n    //     }\n\n    case TICKETS_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/reducers/ticketReducer.js"],"names":["DELETE_TICKET","GET_TICKETS","TICKETS_LOADING","initialState","tickets","loading","state","action","type","payload","filter","ticket","_id"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,eAArC,QAA4D,kBAA5D;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,EADQ;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAL;AACI,+BACOK,KADP;AAEIF,QAAAA,OAAO,EAAEG,MAAM,CAACE,OAFpB;AAGIJ,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKL,aAAL;AACI,+BACOM,KADP;AAEIF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAeL,MAAM,CAACE,OAArD;AAFb;AAIJ;AACA;AACA;AACA;AACA;;AACA,SAAKP,eAAL;AACI,+BACOI,KADP;AAEID,QAAAA,OAAO,EAAE;AAFb;;AAIJ;AACI,aAAOC,KAAP;AAvBR;AAyBH","sourcesContent":["import { DELETE_TICKET, GET_TICKETS, TICKETS_LOADING } from '../actions/types';\n\nconst initialState = {\n    tickets: [],\n    loading: false\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_TICKETS:\n            return {\n                ...state,\n                tickets: action.payload,\n                loading: false\n            };\n        case DELETE_TICKET:\n            return {\n                ...state,\n                tickets: state.tickets.filter(ticket => ticket._id !== action.payload)\n            }\n        // case ADD_TICKET:\n        //     return {\n        //         ...state,\n        //         tickets: [action.payload, ...state.tickets]\n        //     }\n        case TICKETS_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}