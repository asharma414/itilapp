{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/ticketlist.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTickets } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport LoadingScreen from './loadingscreen';\n\nclass TicketList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showDetails = path => {\n      this.props.history.push(path);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getTickets('');\n  }\n\n  render() {\n    const tickets = this.props.ticket.tickets;\n    const loading = this.props.ticket.loading;\n\n    if (loading === true) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(LoadingScreen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    } else if (tickets.length < 1) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"No results found\");\n    } else if (tickets.length > 0) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"my-4\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Open?\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Author\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Created\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Last Modified\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, tickets.map(ticket => React.createElement(\"tr\", {\n        className: \"ticket\",\n        key: ticket._id,\n        onClick: () => this.showDetails(\"/tickets/\".concat(ticket._id)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, ticket.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, ticket.description), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, ticket.status), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, ticket.open === true ? 'Open' : 'Closed'), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, ticket.author.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, ticket.createdAt.substring(0, 19)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, ticket.updatedAt.substring(0, 19)))))));\n    }\n  }\n\n}\n\nTicketList.propTypes = {\n  getTickets: PropTypes.func.isRequired,\n  ticket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, {\n  getTickets\n})(withRouter(TicketList));","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/ticketlist.js"],"names":["React","Component","connect","getTickets","PropTypes","Table","withRouter","LoadingScreen","TicketList","showDetails","path","props","history","push","componentDidMount","render","tickets","ticket","loading","length","map","_id","title","description","status","open","author","name","createdAt","substring","updatedAt","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTickets } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport LoadingScreen from './loadingscreen';\n\nclass TicketList extends Component {\n    componentDidMount() {\n        this.props.getTickets('');\n    }\n\n    showDetails = (path) => {\n        this.props.history.push(path);\n    }\n\n    render() {\n        const { tickets } = this.props.ticket;\n        const { loading } = this.props.ticket;\n        if (loading === true) {\n            return (\n                <div className='container'>\n                    <LoadingScreen />\n                </div>\n            )\n        } else if (tickets.length < 1) {\n            return (\n                <div>\n                    No results found\n                </div>\n            )\n        } else if (tickets.length > 0) {\n            return (\n                <div className='container'>\n                    <Table className='my-4' striped bordered hover responsive='md'>\n                        <thead>\n                            <tr>\n                                <td>Title</td>\n                                <td>Description</td>\n                                <td>Status</td>\n                                <td>Open?</td>\n                                <td>Author</td> \n                                <td>Created</td>\n                                <td>Last Modified</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {tickets.map(ticket => (\n                            <tr className='ticket' key={ticket._id} onClick={() => this.showDetails(`/tickets/${ticket._id}`)}>\n                                    <td>{ticket.title}</td>\n                                    <td>{ticket.description}</td>\n                                    <td>{ticket.status}</td>\n                                    <td>{(ticket.open === true) ? 'Open' : 'Closed'}</td>\n                                    <td>{ticket.author.name}</td>\n                                    <td>{ticket.createdAt.substring(0,19)}</td>\n                                    <td>{ticket.updatedAt.substring(0,19)}</td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </Table>\n                </div>\n            );\n        }   \n    }\n}\n\nTicketList.propTypes = {\n    getTickets: PropTypes.func.isRequired,\n    ticket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, { getTickets })(withRouter(TicketList))"]},"metadata":{},"sourceType":"module"}