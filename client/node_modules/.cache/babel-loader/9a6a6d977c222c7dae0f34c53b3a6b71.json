{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTicket } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\n\nclass TicketPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      description: '',\n      customer: {\n        name: '',\n        contact: ''\n      },\n      author: '',\n      comments: []\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.getTicket(id);\n  }\n\n  render() {\n    const details = this.props.ticket.tickets;\n    console.log(details);\n    this.state.title = details.title;\n    this.state.description = details.description;\n    this.state.customer = details.customer;\n    this.state.author = details.author;\n    this.state.comments = details.comments;\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Form.Control, {\n      type: \"text\",\n      onChange: this.onChange,\n      value: this.state.title,\n      placeholder: \"Enter ticket title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      onChange: this.onChange,\n      value: this.state.description,\n      placeholder: \"Enter ticket description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nTicketPage.propTypes = {\n  getTicket: PropTypes.func.isRequired,\n  ticket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, {\n  getTicket\n})(TicketPage);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js"],"names":["React","Component","connect","getTicket","PropTypes","TicketPage","constructor","props","state","title","description","customer","name","contact","author","comments","componentDidMount","id","match","params","render","details","ticket","tickets","console","log","onChange","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTicket } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\n\nclass TicketPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: '',\n            description: '',\n            customer: {\n                name: '',\n                contact: ''\n            },\n            author: '',\n            comments: []\n        }\n    }\n\n    componentDidMount() {\n         const { id } = this.props.match.params\n         this.props.getTicket(id)\n     }\n\n    render() {\n        const details = this.props.ticket.tickets;\n        console.log(details)\n        this.state.title = details.title;\n        this.state.description = details.description;\n        this.state.customer = details.customer;\n        this.state.author = details.author;\n        this.state.comments = details.comments;\n        return (\n            <Form>\n            <Form.Group controlId=\"title\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control type=\"text\" onChange={this.onChange} value={this.state.title} placeholder=\"Enter ticket title\" />\n            </Form.Group>\n            <Form.Group controlId=\"description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control as='textarea' onChange={this.onChange} value={this.state.description} placeholder=\"Enter ticket description\" />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n}\n\nTicketPage.propTypes = {\n    getTicket: PropTypes.func.isRequired,\n    ticket: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, { getTicket })(TicketPage)"]},"metadata":{},"sourceType":"module"}