{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTicket } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\n\nclass TicketPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errors: {}\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = async e => {};\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id; //this.props.getTicket(id)\n\n    axios.get(\"/tickets/\".concat(id)).then(res => this.setState(res.data)).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Form.Control, {\n      type: \"text\",\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      value: this.state.description,\n      onChange: this.onChange,\n      placeholder: \"Enter ticket description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"customerName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Customer Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      value: ((this.state || {}).customer || {}).name,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"customerContact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Customer Contact\"), React.createElement(Form.Control, {\n      type: \"text\",\n      value: ((this.state || {}).customer || {}).contact,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Form.Control, {\n      type: \"text\",\n      value: ((this.state || {}).author || {}).name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nTicketPage.propTypes = {\n  getTicket: PropTypes.func.isRequired,\n  ticket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, {\n  getTicket\n})(TicketPage);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js"],"names":["axios","React","Component","connect","getTicket","PropTypes","Form","Button","TicketPage","state","errors","onChange","e","setState","target","id","value","onSubmit","componentDidMount","props","match","params","get","then","res","data","catch","err","console","log","render","title","description","customer","name","contact","author","propTypes","func","isRequired","ticket","object","mapStateToProps"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTicket } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\n\n\nclass TicketPage extends Component {\n    state = {\n        errors: {}\n    }\n\n    componentDidMount() {\n         const { id } = this.props.match.params;\n         //this.props.getTicket(id)\n         axios\n         .get(`/tickets/${id}`)\n         .then(res => \n            this.setState(res.data)\n         )\n         .catch(err =>\n            console.log(err)\n         );\n    }\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.id] : e.target.value })\n    }\n\n    onSubmit = async (e) => {\n        \n    }\n\n    render() {\n        return (\n            <Form>\n            <Form.Group controlId=\"title\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control type=\"text\" value={this.state.title} />\n            </Form.Group>\n            <Form.Group controlId=\"description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control as='textarea' value={this.state.description} onChange={this.onChange} placeholder=\"Enter ticket description\" />\n            </Form.Group>\n            <Form.Group controlId=\"customerName\">\n                <Form.Label>Customer Name</Form.Label>\n                <Form.Control type=\"text\" value={((this.state || {}).customer || {}).name} onChange={this.onChange} />\n            </Form.Group>\n            <Form.Group controlId=\"customerContact\">\n                <Form.Label>Customer Contact</Form.Label>\n                <Form.Control type=\"text\" value={((this.state || {}).customer || {}).contact} onChange={this.onChange} />\n            </Form.Group>\n            <Form.Group controlId=\"author\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control type=\"text\" value={((this.state || {}).author || {}).name}  />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n}\n\nTicketPage.propTypes = {\n    getTicket: PropTypes.func.isRequired,\n    ticket: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, { getTicket })(TicketPage)"]},"metadata":{},"sourceType":"module"}