{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/newticket.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { newTicket } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\n\nclass NewTicket extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      status: 'New',\n      description: '',\n      customerName: '',\n      customerContact: ''\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.ticketSubmit = async e => {\n      const user = this.props.auth.user;\n      e.preventDefault();\n\n      if (this.state.title.length > 0 && this.state.description.length > 0) {\n        const newTicket = {\n          title: this.state.title,\n          description: this.state.description,\n          status: this.state.status,\n          customer: {\n            name: this.state.customerName,\n            contact: this.state.customerContact\n          },\n          author: {\n            id: user.id,\n            name: user.name\n          }\n        };\n        await this.props.newTicket(newTicket);\n        this.props.history.push('/tickets');\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: this.ticketSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"customerName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Customer Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      onChange: this.onChange,\n      value: this.state.customerName,\n      placeholder: \"Enter Customer's Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"customerContact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Customer Contact\"), React.createElement(Form.Control, {\n      type: \"text\",\n      onChange: this.onChange,\n      value: this.state.customerContact,\n      placeholder: \"Enter Customer's Contact Info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Form.Control, {\n      as: \"select\",\n      value: this.state.newStatus,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"New\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Awaiting Customer Feedback\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"In Progress\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Cancelled\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Resolved\"))))), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      value: this.state.description,\n      onChange: this.onChange,\n      placeholder: \"Enter ticket description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nNewTicket.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  newTicket\n})(NewTicket);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/newticket.js"],"names":["React","Component","connect","newTicket","PropTypes","Form","Button","NewTicket","state","title","status","description","customerName","customerContact","onChange","e","setState","target","id","value","ticketSubmit","user","props","auth","preventDefault","length","customer","name","contact","author","history","push","render","newStatus","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { newTicket } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\n\nclass NewTicket extends Component {\n    state = {\n        title: '',\n        status: 'New',\n        description: '',\n        customerName: '',\n        customerContact: ''\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.id] : e.target.value })\n    }\n\n    ticketSubmit = async (e) => {\n        const { user } = this.props.auth;\n        e.preventDefault();\n        if (this.state.title.length > 0 && this.state.description.length > 0){\n            const newTicket = {\n                title: this.state.title,\n                description: this.state.description,\n                status: this.state.status,\n                customer: {\n                    name: this.state.customerName,\n                    contact: this.state.customerContact\n                },\n                author: {\n                    id: user.id,\n                    name: user.name\n                }\n            }\n            await this.props.newTicket(newTicket);\n            this.props.history.push('/tickets');\n        }\n    }\n\n    render() {\n        return (\n            <Form onSubmit={this.ticketSubmit}>\n            <Row>\n                <Col>\n                    <Form.Group controlId=\"customerName\">\n                        <Form.Label>Customer Name</Form.Label>\n                        <Form.Control type='text' onChange={this.onChange} value={this.state.customerName} placeholder=\"Enter Customer's Name\" />\n                    </Form.Group>\n                </Col>\n                <Col>\n                    <Form.Group controlId=\"customerContact\">\n                        <Form.Label>Customer Contact</Form.Label>\n                        <Form.Control type='text' onChange={this.onChange} value={this.state.customerContact} placeholder=\"Enter Customer's Contact Info\" />\n                    </Form.Group>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Form.Group controlId='status'>\n                        <Form.Label>Status</Form.Label>\n                        <Form.Control as='select' value={this.state.newStatus} onChange={this.onChange}>\n                            <option>New</option>\n                            <option>Awaiting Customer Feedback</option>\n                            <option>In Progress</option>\n                            <option>Cancelled</option>\n                            <option>Resolved</option>\n                        </Form.Control>\n                    </Form.Group>\n                </Col>\n            </Row>\n            <Form.Group controlId=\"description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control as='textarea' value={this.state.description} onChange={this.onChange} placeholder=\"Enter ticket description\" />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\n        </Form>\n        )\n    }\n}\n\nNewTicket.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { newTicket })(NewTicket)"]},"metadata":{},"sourceType":"module"}