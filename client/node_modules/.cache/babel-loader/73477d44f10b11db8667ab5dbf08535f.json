{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/navbar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { logoutUser } from \"../actions/authActions\";\nimport PropTypes from 'prop-types';\n\nclass Navigation extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n  }\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === true) {\n      let button = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Navbar.Toggle, {\n        \"aria-controls\": \"basic-navbar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(Navbar.Collapse, {\n        id: \"basic-navbar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Nav.Link, {\n        href: \"/tickets\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Home\"), React.createElement(Nav.Link, {\n        href: \"/tickets/create\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"New Ticket\"), React.createElement(Nav.Link, {\n        onClick: this.onLogoutClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Logout\"))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      bg: \"light\",\n      expand: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      href: \"#home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"ITIL App\"), button));\n  }\n\n}\n\nNavigation.propTypes = {\n  auth: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(Navigation);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/navbar.js"],"names":["React","Component","connect","Navbar","Nav","logoutUser","PropTypes","Navigation","onLogoutClick","e","preventDefault","props","render","isAuthenticated","auth","button","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,iBAA5B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAE/BO,aAF+B,GAEfC,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,KAAL,CAAWN,UAAX;AACD,KAL4B;AAAA;;AAO/BO,EAAAA,MAAM,GAAG;AAAA,UACGC,eADH,GACuB,KAAKF,KAAL,CAAWG,IADlC,CACGD,eADH;;AAEL,QAAKA,eAAe,KAAK,IAAzB,EAA+B;AAC/B,UAAIE,MAAM,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD,CAAQ,MAAR;AAAe,yBAAc,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,MAAD,CAAQ,QAAR;AAAiB,QAAA,EAAE,EAAC,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,IAAI,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,IAAI,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA,EAGA,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,OAAO,EAAE,KAAKP,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHA,CADJ,CAFA,CADJ;AAWK;;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAmB,MAAA,MAAM,EAAC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,IAAI,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKO,MAFL,CADJ,CADJ;AAQH;;AA/B8B;;AAkCnCR,UAAU,CAACS,SAAX,GAAuB;AACnBF,EAAAA,IAAI,EAAER,SAAS,CAACW,MAAV,CAAiBC,UADJ;AAEnBb,EAAAA,UAAU,EAAEC,SAAS,CAACa,IAAV,CAAeD;AAFR,CAAvB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCP,EAAAA,IAAI,EAAEO,KAAK,CAACP;AADoB,CAAZ,CAAxB;;AAIA,eAAeZ,OAAO,CAACkB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAyCE,UAAzC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { logoutUser } from \"../actions/authActions\";\nimport PropTypes from 'prop-types';\n\nclass Navigation extends Component {\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n      };\n\n    render() {\n        const { isAuthenticated } = this.props.auth;\n        if ( isAuthenticated === true) {\n        let button =  \n            <div>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/tickets\">Home</Nav.Link>\n                <Nav.Link href=\"/tickets/create\">New Ticket</Nav.Link>\n                <Nav.Link onClick={this.onLogoutClick}>Logout</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n            </div>;\n            }\n\n        return (\n            <div>\n                <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand href=\"#home\">ITIL App</Navbar.Brand>\n                    {button}\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nNavigation.propTypes = {\n    auth: PropTypes.object.isRequired,\n    logoutUser: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(Navigation)\n"]},"metadata":{},"sourceType":"module"}