{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/ticketlist.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTickets } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\n\nclass TicketList extends Component {\n  componentDidMount() {\n    this.props.getTickets();\n  }\n\n  render() {\n    const tickets = this.props.ticket.tickets;\n    return React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Open?\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Created Date\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Last Modified\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, tickets.map(ticket => React.createElement(\"tr\", {\n      key: ticket._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, ticket.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, ticket.description), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, ticket.status), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, ticket.open === true ? 'Open' : 'Closed'), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, ticket.createdAt.substring(0, 19)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, ticket.updatedAt.substring(0, 19))))));\n  }\n\n}\n\nTicketList.propTypes = {\n  getTickets: PropTypes.func.isRequired,\n  ticket: PropTypes.object.isRequired //isAuthenticated: PropTypes.bool\n\n};\n\nconst mapStateToProps = state => ({\n  ticket: state.ticket //isAuthenticated: state.auth.isAuthenticated\n\n});\n\nexport default connect(mapStateToProps, {\n  getTickets\n})(TicketList);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/ticketlist.js"],"names":["React","Component","connect","getTickets","PropTypes","TicketList","componentDidMount","props","render","tickets","ticket","map","_id","title","description","status","open","createdAt","substring","updatedAt","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAO/BK,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,UAAX;AACH;;AAEDK,EAAAA,MAAM,GAAG;AAAA,UACGC,OADH,GACe,KAAKF,KAAL,CAAWG,MAD1B,CACGD,OADH;AAEL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,CADJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCA,OAAO,CAACE,GAAR,CAAYD,MAAM,IACf;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACE,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,MAAM,CAACG,KAAZ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,MAAM,CAACI,WAAZ,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,MAAM,CAACK,MAAZ,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAML,MAAM,CAACM,IAAP,KAAgB,IAAjB,GAAyB,MAAzB,GAAkC,QAAvC,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,MAAM,CAACO,SAAP,CAAiBC,SAAjB,CAA2B,CAA3B,EAA6B,EAA7B,CAAL,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKR,MAAM,CAACS,SAAP,CAAiBD,SAAjB,CAA2B,CAA3B,EAA6B,EAA7B,CAAL,CANJ,CADH,CADD,CAXJ,CADJ;AA0BH;;AAvC8B;;AAA7Bb,U,CACKe,S,GAAY;AACfjB,EAAAA,UAAU,EAAEC,SAAS,CAACiB,IAAV,CAAeC,UADZ;AAEfZ,EAAAA,MAAM,EAAEN,SAAS,CAACmB,MAAV,CAAiBD,UAFV,CAGf;;AAHe,C;;AAyCvB,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCf,EAAAA,MAAM,EAAEe,KAAK,CAACf,MADkB,CAEhC;;AAFgC,CAAZ,CAAxB;;AAKA,eAAeR,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAAyCE,UAAzC,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { getTickets } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\n\nclass TicketList extends Component {\n    static propTypes = {\n        getTickets: PropTypes.func.isRequired,\n        ticket: PropTypes.object.isRequired,\n        //isAuthenticated: PropTypes.bool\n    };\n\n    componentDidMount() {\n        this.props.getTickets();\n    }\n\n    render() {\n        const { tickets } = this.props.ticket;\n        return (\n            <table>\n                <thead>\n                    <tr>\n                        <td>Title</td>\n                        <td>Description</td>\n                        <td>Status</td>\n                        <td>Open?</td>\n                        <td>Created Date</td>\n                        <td>Last Modified</td>\n                    </tr>\n                </thead>\n                <tbody>\n                {tickets.map(ticket => (\n                    <tr key={ticket._id}>\n                        <td>{ticket.title}</td>\n                        <td>{ticket.description}</td>\n                        <td>{ticket.status}</td>\n                        <td>{(ticket.open === true) ? 'Open' : 'Closed'}</td>\n                        <td>{ticket.createdAt.substring(0,19)}</td>\n                        <td>{ticket.updatedAt.substring(0,19)}</td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    ticket: state.ticket,\n    //isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { getTickets })(TicketList)"]},"metadata":{},"sourceType":"module"}