{"ast":null,"code":"var _jsxFileName = \"/Users/abhi/Desktop/itilapp/client/src/components/navbar.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Navbar, Nav, Form, Button } from 'react-bootstrap';\nimport { logoutUser } from \"../actions/authActions\";\nimport { getTickets } from '../actions/ticketActions';\nimport { withRouter, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass Navigation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      term: ''\n    };\n\n    this.myTickets = async () => {\n      const user = this.props.auth.user.name;\n      await this.props.getTickets('', user);\n      this.clearState();\n    };\n\n    this.renderHome = async () => {\n      await this.props.getTickets('', '');\n      this.clearState();\n    };\n\n    this.clearState = () => {\n      this.setState({\n        term: ''\n      });\n    };\n\n    this.onLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      await this.props.history.push('/tickets/1');\n      this.props.getTickets(this.state.term, '');\n    };\n  }\n\n  render() {\n    const {\n      isAuthenticated\n    } = this.props.auth;\n    return /*#__PURE__*/React.createElement(Navbar, {\n      bg: \"light\",\n      expand: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"ITIL App\"), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n      className: isAuthenticated === true ? '' : 'd-none',\n      \"aria-controls\": \"basic-navbar-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n      id: \"basic-navbar-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: isAuthenticated === true ? '' : 'd-none',\n      onSubmit: this.onSubmit,\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      id: \"term\",\n      value: this.state.term,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Search\",\n      className: \"mr-sm-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"outline-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, \"Search\")), /*#__PURE__*/React.createElement(Link, {\n      className: isAuthenticated === true ? 'nav-link' : 'd-none',\n      onClick: this.renderHome,\n      to: \"/tickets\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, \"Home\"), /*#__PURE__*/React.createElement(Link, {\n      className: isAuthenticated === true ? 'nav-link' : 'd-none',\n      onClick: this.clearState,\n      to: \"/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, \"New Ticket\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: isAuthenticated === true ? 'nav-link' : 'd-none',\n      onClick: this.myTickets,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, \"My Tickets\"), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: isAuthenticated === true ? '' : 'd-none',\n      onClick: this.onLogoutClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, \"Logout\")), /*#__PURE__*/React.createElement(\"span\", {\n      className: this.props.auth.user.name ? 'navbar-text' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, this.props.auth.user.name ? this.props.auth.user.name : null)));\n  }\n\n}\n\nNavigation.propTypes = {\n  auth: PropTypes.object.isRequired,\n  logoutUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  getTickets\n})(withRouter(Navigation));","map":{"version":3,"sources":["/Users/abhi/Desktop/itilapp/client/src/components/navbar.js"],"names":["React","Component","connect","Navbar","Nav","Form","Button","logoutUser","getTickets","withRouter","Link","PropTypes","Navigation","state","term","myTickets","user","props","auth","name","clearState","renderHome","setState","onLogoutClick","e","preventDefault","onChange","target","id","value","onSubmit","history","push","render","isAuthenticated","propTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Navbar, Nav, Form, Button } from 'react-bootstrap';\nimport { logoutUser } from \"../actions/authActions\";\nimport { getTickets } from '../actions/ticketActions';\nimport { withRouter, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass Navigation extends Component {\n\n    state = {\n        term: ''\n    }\n\n    myTickets = async () => {\n        const user = this.props.auth.user.name\n        await this.props.getTickets('', user);\n        this.clearState();\n    }\n\n    renderHome = async () => {\n        await this.props.getTickets('', '')\n        this.clearState();\n    }\n\n    clearState = () => {\n        this.setState({term: ''})\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    onChange = (e) => {\n        this.setState({ [e.target.id] : e.target.value })\n    }\n\n    onSubmit = async (e) => { \n        e.preventDefault();\n        await this.props.history.push('/tickets/1');\n        this.props.getTickets(this.state.term, '');\n    }\n\n    render() {\n        const { isAuthenticated } = this.props.auth;\n        return (\n            <Navbar bg='light' expand='lg'>\n                <Navbar.Brand href='/'>ITIL App</Navbar.Brand>\n                <Navbar.Toggle className={ isAuthenticated === true ? '' : 'd-none' } aria-controls='basic-navbar-nav' />\n                <Navbar.Collapse id='basic-navbar-nav'>\n                    <Nav className='mr-auto'>\n                        <Form className={ isAuthenticated === true ? '' : 'd-none' } onSubmit={this.onSubmit} inline>\n                            <Form.Control id='term' value={this.state.term} onChange={this.onChange} type=\"text\" placeholder=\"Search\" className='mr-sm-2' />\n                            <Button type='submit' variant='outline-success'>Search</Button>\n                        </Form>\n                        <Link className={ isAuthenticated === true ? 'nav-link' : 'd-none' } onClick={this.renderHome} to='/tickets'>Home</Link>\n                        <Link className={ isAuthenticated === true ? 'nav-link' : 'd-none' } onClick={this.clearState} to='/new'>New Ticket</Link>\n                        <div className={ isAuthenticated === true ? 'nav-link' : 'd-none' } onClick={this.myTickets}>My Tickets</div>\n                        <Nav.Link className={ isAuthenticated === true ? '' : 'd-none' } onClick={this.onLogoutClick}>Logout</Nav.Link>\n                    </Nav>\n                    <span className={this.props.auth.user.name ? 'navbar-text' : ''}>{this.props.auth.user.name ? this.props.auth.user.name : null}</span>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nNavigation.propTypes = {\n    auth: PropTypes.object.isRequired,\n    logoutUser: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser, getTickets })(withRouter(Navigation))\n"]},"metadata":{},"sourceType":"module"}