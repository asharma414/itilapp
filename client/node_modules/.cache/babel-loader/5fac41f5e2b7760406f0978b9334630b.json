{"ast":null,"code":"import _classCallCheck from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import{getTickets}from'../actions/ticketActions';import{Table}from'react-bootstrap';import{withRouter}from'react-router-dom';import LoadingScreen from'./loadingscreen';var TicketList=/*#__PURE__*/function(_Component){_inherits(TicketList,_Component);function TicketList(){var _getPrototypeOf2;var _this;_classCallCheck(this,TicketList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(TicketList)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.showDetails=function(path){_this.props.history.push(path);};return _this;}_createClass(TicketList,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getTickets('','');}},{key:\"render\",value:function render(){var _this2=this;var tickets=this.props.ticket.tickets;var loading=this.props.ticket.loading;if(loading===true){return React.createElement(\"div\",{className:\"container\"},React.createElement(LoadingScreen,null));}else if(tickets.length<1){return React.createElement(\"div\",null,\"No results found\");}else{return React.createElement(\"div\",{className:\"container\"},React.createElement(Table,{className:\"my-4\",striped:true,bordered:true,hover:true,responsive:\"md\"},React.createElement(\"thead\",null,React.createElement(\"tr\",null,React.createElement(\"td\",null,\"Title\"),React.createElement(\"td\",null,\"Description\"),React.createElement(\"td\",null,\"Status\"),React.createElement(\"td\",null,\"Open?\"),React.createElement(\"td\",null,\"Author\"),React.createElement(\"td\",null,\"Assigned To\"),React.createElement(\"td\",null,\"Created\"),React.createElement(\"td\",null,\"Last Modified\"))),React.createElement(\"tbody\",null,tickets.map(function(ticket){return React.createElement(\"tr\",{className:\"ticket\",key:ticket._id,onClick:function onClick(){return _this2.showDetails(\"/tickets/\".concat(ticket._id));}},React.createElement(\"td\",null,ticket.title),React.createElement(\"td\",null,ticket.description),React.createElement(\"td\",null,ticket.status),React.createElement(\"td\",null,ticket.open===true?'Open':'Closed'),React.createElement(\"td\",null,ticket.author.name),React.createElement(\"td\",null,ticket.assignedTo.name),React.createElement(\"td\",null,ticket.createdAt.substring(0,19)),React.createElement(\"td\",null,ticket.updatedAt.substring(0,19)));}))));}}}]);return TicketList;}(Component);var mapStateToProps=function mapStateToProps(state){return{ticket:state.ticket};};export default connect(mapStateToProps,{getTickets:getTickets})(withRouter(TicketList));","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/ticketlist.js"],"names":["React","Component","connect","getTickets","Table","withRouter","LoadingScreen","TicketList","showDetails","path","props","history","push","tickets","ticket","loading","length","map","_id","title","description","status","open","author","name","assignedTo","createdAt","substring","updatedAt","mapStateToProps","state"],"mappings":"smBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CAEA,OAASC,KAAT,KAAsB,iBAAtB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,C,GAEMC,CAAAA,U,+YAKFC,W,CAAc,SAACC,IAAD,CAAU,CACpB,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwBH,IAAxB,EACH,C,mGANmB,CAChB,KAAKC,KAAL,CAAWP,UAAX,CAAsB,EAAtB,CAA0B,EAA1B,EACH,C,uCAMQ,oBACGU,CAAAA,OADH,CACe,KAAKH,KAAL,CAAWI,MAD1B,CACGD,OADH,IAEGE,CAAAA,OAFH,CAEe,KAAKL,KAAL,CAAWI,MAF1B,CAEGC,OAFH,CAGL,GAAIA,OAAO,GAAK,IAAhB,CAAsB,CAClB,MACI,4BAAK,SAAS,CAAC,WAAf,EACI,oBAAC,aAAD,MADJ,CADJ,CAKH,CAND,IAMO,IAAIF,OAAO,CAACG,MAAR,CAAiB,CAArB,CAAwB,CAC3B,MACI,mDADJ,CAKH,CANM,IAMA,CACH,MACI,4BAAK,SAAS,CAAC,WAAf,EACI,oBAAC,KAAD,EAAO,SAAS,CAAC,MAAjB,CAAwB,OAAO,KAA/B,CAAgC,QAAQ,KAAxC,CAAyC,KAAK,KAA9C,CAA+C,UAAU,CAAC,IAA1D,EACI,iCACI,8BACI,sCADJ,CAEI,4CAFJ,CAGI,uCAHJ,CAII,sCAJJ,CAKI,uCALJ,CAMI,4CANJ,CAOI,wCAPJ,CAQI,8CARJ,CADJ,CADJ,CAaI,iCACCH,OAAO,CAACI,GAAR,CAAY,SAAAH,MAAM,QACf,2BAAI,SAAS,CAAC,QAAd,CAAuB,GAAG,CAAEA,MAAM,CAACI,GAAnC,CAAwC,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACV,WAAL,oBAA6BM,MAAM,CAACI,GAApC,EAAN,EAAjD,EACQ,8BAAKJ,MAAM,CAACK,KAAZ,CADR,CAEQ,8BAAKL,MAAM,CAACM,WAAZ,CAFR,CAGQ,8BAAKN,MAAM,CAACO,MAAZ,CAHR,CAIQ,8BAAMP,MAAM,CAACQ,IAAP,GAAgB,IAAjB,CAAyB,MAAzB,CAAkC,QAAvC,CAJR,CAKQ,8BAAKR,MAAM,CAACS,MAAP,CAAcC,IAAnB,CALR,CAMQ,8BAAKV,MAAM,CAACW,UAAP,CAAkBD,IAAvB,CANR,CAOQ,8BAAKV,MAAM,CAACY,SAAP,CAAiBC,SAAjB,CAA2B,CAA3B,CAA6B,EAA7B,CAAL,CAPR,CAQQ,8BAAKb,MAAM,CAACc,SAAP,CAAiBD,SAAjB,CAA2B,CAA3B,CAA6B,EAA7B,CAAL,CARR,CADe,EAAlB,CADD,CAbJ,CADJ,CADJ,CAgCH,CACJ,C,wBA1DoB1B,S,EAkEzB,GAAM4B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChChB,MAAM,CAAEgB,KAAK,CAAChB,MADkB,CAAZ,EAAxB,CAIA,cAAeZ,CAAAA,OAAO,CAAC2B,eAAD,CAAkB,CAAE1B,UAAU,CAAVA,UAAF,CAAlB,CAAP,CAAyCE,UAAU,CAACE,UAAD,CAAnD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTickets } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport LoadingScreen from './loadingscreen';\n\nclass TicketList extends Component {\n    componentDidMount() {\n        this.props.getTickets('', '');\n    }\n\n    showDetails = (path) => {\n        this.props.history.push(path);\n    }\n\n    render() {\n        const { tickets } = this.props.ticket;\n        const { loading } = this.props.ticket;\n        if (loading === true) {\n            return (\n                <div className='container'>\n                    <LoadingScreen />\n                </div>\n            )\n        } else if (tickets.length < 1) {\n            return (\n                <div>\n                    No results found\n                </div>\n            )\n        } else {\n            return (\n                <div className='container'>\n                    <Table className='my-4' striped bordered hover responsive='md'>\n                        <thead>\n                            <tr>\n                                <td>Title</td>\n                                <td>Description</td>\n                                <td>Status</td>\n                                <td>Open?</td>\n                                <td>Author</td> \n                                <td>Assigned To</td>\n                                <td>Created</td>\n                                <td>Last Modified</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {tickets.map(ticket => (\n                            <tr className='ticket' key={ticket._id} onClick={() => this.showDetails(`/tickets/${ticket._id}`)}>\n                                    <td>{ticket.title}</td>\n                                    <td>{ticket.description}</td>\n                                    <td>{ticket.status}</td>\n                                    <td>{(ticket.open === true) ? 'Open' : 'Closed'}</td>\n                                    <td>{ticket.author.name}</td>\n                                    <td>{ticket.assignedTo.name}</td>\n                                    <td>{ticket.createdAt.substring(0,19)}</td>\n                                    <td>{ticket.updatedAt.substring(0,19)}</td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </Table>\n                </div>\n            );\n        }   \n    }\n}\n\nTicketList.propTypes = {\n    getTickets: PropTypes.func.isRequired,\n    ticket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, { getTickets })(withRouter(TicketList))"]},"metadata":{},"sourceType":"module"}