{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; //import { getTicket } from '../actions/ticketActions';\n\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\n\nclass TicketPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ''\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.value\n      });\n    };\n\n    this.onSubmit = async e => {};\n  }\n\n  render() {\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Form.Control, {\n      type: \"text\",\n      value: this.state.title,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n} // TicketPage.propTypes = {\n//     getTicket: PropTypes.func.isRequired,\n//     ticket: PropTypes.object.isRequired\n// }\n// const mapStateToProps = (state) => ({\n//     ticket: state.ticket\n// });\n\n\nexport default connect(null)(TicketPage);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js"],"names":["axios","React","Component","connect","PropTypes","Form","Button","TicketPage","state","title","onChange","e","setState","target","id","value","onSubmit","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;;AAGA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BM,KAD+B,GACvB;AACJC,MAAAA,KAAK,EAAE;AADH,KADuB;;AAAA,SAsB/BC,QAtB+B,GAsBnBC,CAAD,IAAO;AACd,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAgBH,CAAC,CAACI;AAApB,OAAd;AACH,KAxB8B;;AAAA,SA0B/BC,QA1B+B,GA0BpB,MAAOL,CAAP,IAAa,CAEvB,CA5B8B;AAAA;;AA8B/BM,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,KAA5C;AAAmD,MAAA,QAAQ,EAAE,KAAKC,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA,EAqBA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBA,CADJ;AAyBH;;AAxD8B,C,CA2DnC;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,eAAeP,OAAO,CAAC,IAAD,CAAP,CAAcI,UAAd,CAAf","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n//import { getTicket } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\n\n\nclass TicketPage extends Component {\n    state = {\n        title: ''\n    }\n\n    // componentDidMount() {\n    //      const { id } = this.props.match.params;\n    //      //this.props.getTicket(id)\n    //      axios\n    //      .get(`/tickets/${id}`)\n    //      .then(res => \n    //         this.setState({\n    //             title: res.data.title,\n    //             description: res.data.description,\n    //         })\n    //      )\n    //      .catch(err =>\n    //         console.log(err)\n    //      );\n    // }\n\n\n    onChange = (e) => {\n        this.setState({ [e.target.id] : e.value })\n    }\n\n    onSubmit = async (e) => {\n        \n    }\n\n    render() {\n        return (\n            <Form>\n            <Form.Group controlId=\"title\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control type=\"text\" value={this.state.title} onChange={this.onChange}/>\n            </Form.Group>\n            {/* <Form.Group controlId=\"description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control as='textarea' value={this.state.description} onChange={this.onChange} placeholder=\"Enter ticket description\" />\n            </Form.Group>\n            <Form.Group controlId=\"customerName\">\n                <Form.Label>Customer Name</Form.Label>\n                <Form.Control type=\"text\" value={this.state.customerName} onChange={this.onChange} />\n            </Form.Group>\n            <Form.Group controlId=\"customerContact\">\n                <Form.Label>Customer Contact</Form.Label>\n                <Form.Control type=\"text\" value={this.state.customerContact} onChange={this.onChange} />\n            </Form.Group>\n            <Form.Group controlId=\"author\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control type=\"text\" defaultValue={this.state.author}  />\n            </Form.Group> */}\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n}\n\n// TicketPage.propTypes = {\n//     getTicket: PropTypes.func.isRequired,\n//     ticket: PropTypes.object.isRequired\n// }\n\n// const mapStateToProps = (state) => ({\n//     ticket: state.ticket\n// });\n\nexport default connect(null)(TicketPage)"]},"metadata":{},"sourceType":"module"}