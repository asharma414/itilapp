{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/newticket.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { newTicket } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\n\nclass NewTicket extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = async e => {\n      const user = this.props.auth.user;\n      e.preventDefault();\n\n      if (this.state.title.length > 0 && this.state.description.length > 0) {\n        const newTicket = {\n          title: this.state.title,\n          description: this.state.description,\n          author: {\n            id: user.id,\n            name: user.name\n          }\n        };\n        await this.props.newTicket(newTicket);\n        this.props.history.push('/tickets');\n      }\n    };\n\n    this.state = {\n      title: '',\n      description: ''\n    };\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Form.Control, {\n      type: \"text\",\n      onChange: this.onChange,\n      value: this.state.title,\n      placeholder: \"Enter ticket title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      onChange: this.onChange,\n      value: this.state.description,\n      placeholder: \"Enter ticket description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nNewTicket.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  newTicket\n})(NewTicket);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/newticket.js"],"names":["React","Component","connect","newTicket","PropTypes","Form","Button","NewTicket","constructor","onChange","e","setState","target","id","value","onSubmit","user","props","auth","preventDefault","state","title","length","description","author","name","history","push","render","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { newTicket } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\n\nclass NewTicket extends Component {\n    constructor() {\n        super();\n        this.state = {\n            title: '',\n            description: '',\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.id] : e.target.value })\n    }\n\n    onSubmit = async (e) => {\n        const { user } = this.props.auth\n        e.preventDefault();\n        if (this.state.title.length > 0 && this.state.description.length > 0){\n            const newTicket = {\n                title: this.state.title,\n                description: this.state.description,\n                author: {\n                    id: user.id,\n                    name: user.name\n                }\n            }\n            await this.props.newTicket(newTicket);\n            this.props.history.push('/tickets');\n        }\n    }\n\n    render() {\n        return (\n            <Form onSubmit={this.onSubmit}>\n            <Form.Group controlId=\"title\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control type=\"text\" onChange={this.onChange} value={this.state.title} placeholder=\"Enter ticket title\" />\n            </Form.Group>\n            <Form.Group controlId=\"description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control as='textarea' onChange={this.onChange} value={this.state.description} placeholder=\"Enter ticket description\" />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n                Submit\n            </Button>\n            </Form>\n        )\n    }\n}\n\nNewTicket.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { newTicket })(NewTicket)"]},"metadata":{},"sourceType":"module"}