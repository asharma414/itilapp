{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/activatedscreen.js\";\nimport React, { Component } from 'react';\nimport LoadingScreen from './loadingscreen';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { activate } from '../actions/authActions';\nimport axios from 'axios';\n\nclass ActivatedScreen extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.props.activate(window.location.pathname.substring(8));\n  }\n\n  render() {\n    const {\n      emailnotfound\n    } = this.props.errors;\n\n    if (errors) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"errors\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Your account has been activated!\");\n    }\n  }\n\n}\n\nActivatedScreen.propTypes = {\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  activate\n})(ActivatedScreen);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/activatedscreen.js"],"names":["React","Component","LoadingScreen","connect","PropTypes","activate","axios","ActivatedScreen","state","loading","componentDidMount","props","window","location","pathname","substring","render","emailnotfound","errors","propTypes","object","isRequired","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAN,SAA8BN,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCO,KADoC,GAC5B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD4B;AAAA;;AAOpCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWN,QAAX,CAAoBO,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,SAAzB,CAAmC,CAAnC,CAApB;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAoB,KAAKN,KAAL,CAAWO,MAArC;;AACA,QAAIA,MAAJ,EAAY;AACR,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,KAJD,MAKK;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ;AAKC;AACJ;;AAxBmC;;AA2BxCX,eAAe,CAACY,SAAhB,GAA4B;AACxBD,EAAAA,MAAM,EAAEd,SAAS,CAACgB,MAAV,CAAiBC;AADD,CAA5B;;AAIA,MAAMC,eAAe,GAAGd,KAAK,KAAK;AAC9Be,EAAAA,IAAI,EAAEf,KAAK,CAACe,IADkB;AAE9BL,EAAAA,MAAM,EAAEV,KAAK,CAACU;AAFgB,CAAL,CAA7B;;AAKA,eAAef,OAAO,CAACmB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAAuCE,eAAvC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport LoadingScreen from './loadingscreen';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { activate } from '../actions/authActions';\nimport axios from 'axios';\n\nclass ActivatedScreen extends Component {\n    state = {\n        loading: true\n    }\n\n\n\n    componentDidMount() {\n        this.props.activate(window.location.pathname.substring(8));\n    }\n    render() {\n        const { emailnotfound } = this.props.errors;\n        if (errors) {\n            return(\n                <div>errors</div>\n            )\n        }\n        else {\n        return (\n            <div>\n                Your account has been activated!\n            </div>\n        )\n        }\n    }\n}\n\nActivatedScreen.propTypes = {\n    errors: PropTypes.object.isRequired\n  };\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n    });\n\nexport default connect(mapStateToProps, { activate })(ActivatedScreen)"]},"metadata":{},"sourceType":"module"}