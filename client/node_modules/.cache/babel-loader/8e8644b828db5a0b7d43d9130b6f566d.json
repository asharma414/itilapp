{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/ticketlist.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTickets } from '../actions/ticketActions';\nimport Pagination from './pagination';\nimport PropTypes from 'prop-types';\nimport { Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport LoadingScreen from './loadingscreen';\n\nclass TicketList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentPage: 1,\n      ticketsPerPage: 10\n    };\n\n    this.showDetails = path => {\n      this.props.history.push(path);\n    };\n\n    this.paginate = pageNumber => {\n      this.setState({\n        currentPage: pageNumber\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      page\n    } = this.props.match.params;\n\n    if (page) {\n      this.setState({\n        currentPage: page\n      });\n    }\n\n    this.props.getTickets('', '');\n  }\n\n  render() {\n    const {\n      page\n    } = this.props.match.params;\n    const {\n      tickets\n    } = this.props.ticket;\n    const limit = Math.ceil(tickets / this.state.ticketsPerPage);\n    console.log(limit);\n    const {\n      loading\n    } = this.props.ticket;\n    const indexOfLastTicket = this.state.currentPage * this.state.ticketsPerPage;\n    const indexOfFirstTicket = indexOfLastTicket - this.state.ticketsPerPage;\n    const currentTickets = tickets.slice(indexOfFirstTicket, indexOfLastTicket);\n\n    if (loading === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LoadingScreen, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }));\n    } else if (tickets.length < 1 || page < 1 || page > limit) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, \"No results found\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        className: \"my-4\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, \"Author\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, \"Assigned To\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }, \"Created\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }\n      }, \"Last Modified\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }, currentTickets.map(ticket => /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"ticket\",\n        key: ticket._id,\n        onClick: () => this.showDetails(`/ticket/${ticket._id}`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 37\n        }\n      }, ticket.title), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }\n      }, ticket.description.substring(0, 25)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      }, ticket.status), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }\n      }, ticket.open === true ? 'Open' : 'Closed'), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 37\n        }\n      }, ticket.author.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 37\n        }\n      }, ticket.assignedTo.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 37\n        }\n      }, ticket.createdAt.substring(0, 19)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 37\n        }\n      }, ticket.updatedAt.substring(0, 19)))))), /*#__PURE__*/React.createElement(Pagination, {\n        ticketsPerPage: this.state.ticketsPerPage,\n        totalTickets: tickets.length,\n        currentPage: this.state.currentPage,\n        paginate: this.paginate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n}\n\nTicketList.propTypes = {\n  getTickets: PropTypes.func.isRequired,\n  ticket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, {\n  getTickets\n})(withRouter(TicketList));","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/ticketlist.js"],"names":["React","Component","connect","getTickets","Pagination","PropTypes","Table","withRouter","LoadingScreen","TicketList","state","currentPage","ticketsPerPage","showDetails","path","props","history","push","paginate","pageNumber","setState","componentDidMount","page","match","params","render","tickets","ticket","limit","Math","ceil","console","log","loading","indexOfLastTicket","indexOfFirstTicket","currentTickets","slice","length","map","_id","title","description","substring","status","open","author","name","assignedTo","createdAt","updatedAt","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTickets } from '../actions/ticketActions';\nimport Pagination from './pagination';\nimport PropTypes from 'prop-types';\nimport { Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport LoadingScreen from './loadingscreen';\n\nclass TicketList extends Component {\n\n    state = {\n        currentPage: 1,\n        ticketsPerPage: 10\n    }\n\n    componentDidMount() {\n        const { page } = this.props.match.params;\n        if (page) {\n            this.setState({ currentPage: page })\n        }\n        this.props.getTickets('', '');\n    }\n\n    showDetails = (path) => {\n        this.props.history.push(path);\n    }\n\n    paginate = (pageNumber) => {\n        this.setState({currentPage: pageNumber})\n    }\n\n    render() {\n        const { page } = this.props.match.params;\n        const { tickets } = this.props.ticket;\n        const limit = Math.ceil(tickets/this.state.ticketsPerPage);\n        console.log(limit)\n        const { loading } = this.props.ticket;\n        const indexOfLastTicket = this.state.currentPage * this.state.ticketsPerPage;\n        const indexOfFirstTicket = indexOfLastTicket - this.state.ticketsPerPage;\n        const currentTickets = tickets.slice(indexOfFirstTicket, indexOfLastTicket)\n        if (loading === true) {\n            return (\n                <div className='container'>\n                    <LoadingScreen />\n                </div>\n            )\n        } else if (tickets.length < 1 || (page < 1 || page > limit)) {\n            return (\n                <div>\n                    No results found\n                </div>\n            )\n        } else {\n            return (\n                <div className='container'>\n                    <Table className='my-4' striped bordered hover responsive='md'>\n                        <thead>\n                            <tr>\n                                <th>Title</th>\n                                <th>Description</th>\n                                <th>Status</th>\n                                <th>State</th>\n                                <th>Author</th> \n                                <th>Assigned To</th>\n                                <th>Created</th>\n                                <th>Last Modified</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {currentTickets.map(ticket => (\n                            <tr className='ticket' key={ticket._id} onClick={() => this.showDetails(`/ticket/${ticket._id}`)}>\n                                    <td>{ticket.title}</td>\n                                    <td>{ticket.description.substring(0, 25)}</td>\n                                    <td>{ticket.status}</td>\n                                    <td>{(ticket.open === true) ? 'Open' : 'Closed'}</td>\n                                    <td>{ticket.author.name}</td>\n                                    <td>{ticket.assignedTo.name}</td>\n                                    <td>{ticket.createdAt.substring(0,19)}</td>\n                                    <td>{ticket.updatedAt.substring(0,19)}</td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </Table>\n                    <Pagination ticketsPerPage={this.state.ticketsPerPage} totalTickets={tickets.length} currentPage={this.state.currentPage} paginate={this.paginate}/>\n                </div>\n            );\n        }   \n    }\n}\n\nTicketList.propTypes = {\n    getTickets: PropTypes.func.isRequired,\n    ticket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, { getTickets })(withRouter(TicketList))"]},"metadata":{},"sourceType":"module"}