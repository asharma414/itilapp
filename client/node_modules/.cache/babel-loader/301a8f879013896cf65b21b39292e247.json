{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/auth/login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { loginUser } from '../../actions/authActions';\nimport PropTypes from 'prop-types';\nimport { Button, Form } from 'react-bootstrap';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData);\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/tickets');\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.auth.isAuthenticated) {\n      nextProps.history.push('/tickets'); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      return {\n        errors: nextProps.errors\n      };\n    }\n  }\n\n  render() {\n    const errors = this.props.errors;\n    return React.createElement(\"div\", {\n      className: \"container mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Don't have an account? \", React.createElement(Link, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Register\")), React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"     \", errors.email, errors.emailnotfound), React.createElement(Form.Control, {\n      value: this.state.email,\n      onChange: this.onChange,\n      type: \"email\",\n      error: errors.email,\n      placeholder: \"Enter email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"span\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"     \", errors.password, errors.passwordincorrect), React.createElement(Form.Control, {\n      onChange: this.onChange,\n      type: \"password\",\n      error: errors.password,\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Login\"))));\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/auth/login.js"],"names":["React","Component","connect","Link","loginUser","PropTypes","Button","Form","Login","state","email","password","errors","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","props","componentDidMount","auth","isAuthenticated","history","push","getDerivedStateFromProps","nextProps","prevState","render","emailnotfound","passwordincorrect","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { loginUser } from '../../actions/authActions';\nimport PropTypes from 'prop-types';\nimport { Button, Form } from 'react-bootstrap';\n\n\nclass Login extends Component {\n        state = {\n          email: '',\n          password: '',\n          errors: {}\n        };\n\n      componentDidMount() {\n        // If logged in and user navigates to Login page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n          this.props.history.push('/tickets');\n        }\n      }\n      \n      static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.auth.isAuthenticated) {\n          nextProps.history.push('/tickets'); // push user to dashboard when they login\n        }\n        if (nextProps.errors) {\n            return { errors: nextProps.errors }\n        }\n      }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n      };\n    onSubmit = e => {\n        e.preventDefault();\n    const userData = {\n          email: this.state.email,\n          password: this.state.password,\n        };\n        this.props.loginUser(userData);\n      };\n\n    render() {\n        const { errors } = this.props;\n        return (\n            <div className='container mt-4'>\n              <p className='text-center'>Don't have an account? <Link to='/register'>Register</Link></p>\n              <div className='d-flex justify-content-center'>\n                  <Form onSubmit={this.onSubmit}>\n                  <Form.Group controlId='email'>\n                      <Form.Label>Email address</Form.Label>\n                      <span className='text-danger'>     {errors.email}{errors.emailnotfound}</span>\n                      <Form.Control value={this.state.email} onChange={this.onChange} type='email' error={errors.email} placeholder=\"Enter email\" />\n                  </Form.Group>\n                  <Form.Group controlId=\"password\">\n                      <Form.Label>Password</Form.Label>\n                      <span className='text-danger'>     {errors.password}{errors.passwordincorrect}</span>\n                      <Form.Control onChange={this.onChange} type='password' error={errors.password} placeholder=\"Password\" />\n                  </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\">Login</Button>\n                </Form>\n              </div>\n          </div>\n        )\n    }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);"]},"metadata":{},"sourceType":"module"}