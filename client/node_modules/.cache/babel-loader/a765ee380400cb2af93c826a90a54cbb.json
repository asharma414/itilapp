{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTicket } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\nimport { callbackify } from 'util';\n\nclass TicketPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.state = {\n      title: ''\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    this.props.getTicket(id);\n  }\n\n  render() {\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Form.Control, {\n      type: \"text\",\n      defaultValue: this.props.ticket.tickets.title,\n      onChange: this.onChange,\n      value: this.state.title,\n      placeholder: \"Enter ticket title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      onChange: this.onChange,\n      value: this.state.description,\n      placeholder: \"Enter ticket description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nTicketPage.propTypes = {\n  getTicket: PropTypes.func.isRequired,\n  ticket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, {\n  getTicket\n})(TicketPage);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js"],"names":["React","Component","connect","getTicket","PropTypes","Form","Button","callbackify","TicketPage","constructor","props","onChange","e","setState","target","id","value","state","title","componentDidMount","match","params","render","ticket","tickets","description","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,WAAT,QAA4B,MAA5B;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAC/BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,QAVmB,GAUPC,CAAD,IAAO;AACd,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAgBH,CAAC,CAACE,MAAF,CAASE;AAA3B,OAAd;AACH,KAZkB;;AAEf,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAAA,UACPJ,EADO,GACA,KAAKL,KAAL,CAAWU,KAAX,CAAiBC,MADjB,CACPN,EADO;AAEf,SAAKL,KAAL,CAAWP,SAAX,CAAqBY,EAArB;AACJ;;AAMDO,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,YAAY,EAAE,KAAKZ,KAAL,CAAWa,MAAX,CAAkBC,OAAlB,CAA0BN,KAAlE;AAAyE,MAAA,QAAQ,EAAE,KAAKP,QAAxF;AAAkG,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWC,KAApH;AAA2H,MAAA,WAAW,EAAC,oBAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA,EAKA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,UAAjB;AAA4B,MAAA,QAAQ,EAAE,KAAKP,QAA3C;AAAqD,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWQ,WAAvE;AAAoF,MAAA,WAAW,EAAC,0BAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALA,EASA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATA,CADJ;AAaH;;AA7B8B;;AAgCnCjB,UAAU,CAACkB,SAAX,GAAuB;AACnBvB,EAAAA,SAAS,EAAEC,SAAS,CAACuB,IAAV,CAAeC,UADP;AAEnBL,EAAAA,MAAM,EAAEnB,SAAS,CAACyB,MAAV,CAAiBD;AAFN,CAAvB;;AAKA,MAAME,eAAe,GAAIb,KAAD,KAAY;AAChCM,EAAAA,MAAM,EAAEN,KAAK,CAACM;AADkB,CAAZ,CAAxB;;AAIA,eAAerB,OAAO,CAAC4B,eAAD,EAAkB;AAAE3B,EAAAA;AAAF,CAAlB,CAAP,CAAwCK,UAAxC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTicket } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'react-bootstrap';\nimport { callbackify } from 'util';\n\nclass TicketPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {title: ''}\n    }\n\n    componentDidMount() {\n         const { id } = this.props.match.params;\n         this.props.getTicket(id)\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.id] : e.target.value })\n    }\n\n    render() {\n        return (\n            <Form>\n            <Form.Group controlId=\"title\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control type=\"text\" defaultValue={this.props.ticket.tickets.title} onChange={this.onChange} value={this.state.title} placeholder=\"Enter ticket title\" />\n            </Form.Group>\n            <Form.Group controlId=\"description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control as='textarea' onChange={this.onChange} value={this.state.description} placeholder=\"Enter ticket description\" />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Form>\n        )\n    }\n}\n\nTicketPage.propTypes = {\n    getTicket: PropTypes.func.isRequired,\n    ticket: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, { getTicket })(TicketPage)"]},"metadata":{},"sourceType":"module"}