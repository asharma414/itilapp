{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateTicket } from '../actions/ticketActions';\nimport { returnErrors } from '../actions/errorActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Table } from 'react-bootstrap';\n\nclass TicketPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      status: '',\n      created: '',\n      open: '',\n      updated: '',\n      title: '',\n      description: '',\n      customerName: '',\n      customerContact: '',\n      author: '',\n      newStatus: '',\n      newOpen: '',\n      comments: [],\n      errors: {}\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const id = this.props.match.params.id;\n      const updatedTicket = {\n        description: this.state.description,\n        customer: {\n          name: this.state.customerName,\n          contact: this.state.customerContact\n        },\n        status: this.state.newStatus,\n        open: this.state.newOpen === 'Open' ? true : false\n      };\n      await this.props.updateTicket(id, updatedTicket);\n      window.location.reload(false);\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id; //this.props.getTicket(id)\n\n    axios.get(\"/tickets/\".concat(id)).then(res => this.setState({\n      title: res.data.title,\n      status: res.data.status,\n      newStatus: res.data.status,\n      open: res.data.open === true ? 'Open' : 'Closed',\n      newOpen: res.data.open === true ? 'Open' : 'Closed',\n      created: res.data.createdAt,\n      updated: res.data.updatedAt,\n      description: res.data.description,\n      customerName: ((res.data || {}).customer || {}).name,\n      customerContact: ((res.data || {}).customer || {}).contact,\n      comments: res.data.comments,\n      author: ((res.data || {}).author || {}).name\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Table, {\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Status\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Open?\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Author\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Created Date\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Last Modified\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.status), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.open === 'Open' ? 'Open' : 'Closed'), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.author), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.created.substring(0, 19)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.updated.substring(0, 19))))), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      value: this.state.description,\n      onChange: this.onChange,\n      placeholder: \"Enter ticket description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"newStatus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Form.Control, {\n      as: \"select\",\n      value: this.state.newStatus,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"New\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Awaiting Customer Feedback\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"In Progress\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Cancelled\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Resolved\"))), React.createElement(Form.Group, {\n      controlId: \"newOpen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"State\"), React.createElement(Form.Control, {\n      as: \"select\",\n      value: this.state.newOpen,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Closed\"))), React.createElement(Form.Group, {\n      controlId: \"customerName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Customer Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      onChange: this.onChange,\n      value: this.state.customerName,\n      placeholder: \"Enter Customer's Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"customerContact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Customer Contact\"), React.createElement(Form.Control, {\n      type: \"text\",\n      onChange: this.onChange,\n      value: this.state.customerContact,\n      placeholder: \"Enter Customer's Contact Info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nTicketPage.propTypes = {\n  updateTicket: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  returnErrors,\n  updateTicket\n})(TicketPage);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js"],"names":["axios","React","Component","connect","updateTicket","returnErrors","PropTypes","Form","Button","Table","TicketPage","state","status","created","open","updated","title","description","customerName","customerContact","author","newStatus","newOpen","comments","errors","onChange","e","setState","target","id","value","onSubmit","preventDefault","props","match","params","updatedTicket","customer","name","contact","window","location","reload","componentDidMount","get","then","res","data","createdAt","updatedAt","catch","err","console","log","render","substring","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,iBAApC;;AAGA,MAAMC,UAAN,SAAyBR,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BS,KAD+B,GACvB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAE,EAFL;AAGJC,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,OAAO,EAAE,EAJL;AAKJC,MAAAA,KAAK,EAAE,EALH;AAMJC,MAAAA,WAAW,EAAE,EANT;AAOJC,MAAAA,YAAY,EAAE,EAPV;AAQJC,MAAAA,eAAe,EAAE,EARb;AASJC,MAAAA,MAAM,EAAE,EATJ;AAUJC,MAAAA,SAAS,EAAE,EAVP;AAWJC,MAAAA,OAAO,EAAE,EAXL;AAYJC,MAAAA,QAAQ,EAAG,EAZP;AAaJC,MAAAA,MAAM,EAAE;AAbJ,KADuB;;AAAA,SA2C/BC,QA3C+B,GA2CnBC,CAAD,IAAO;AACd,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAgBH,CAAC,CAACE,MAAF,CAASE;AAA3B,OAAd;AACH,KA7C8B;;AAAA,SA+C/BC,QA/C+B,GA+CpB,MAAOL,CAAP,IAAa;AACpBA,MAAAA,CAAC,CAACM,cAAF;AADoB,YAEZH,EAFY,GAEL,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAFZ,CAEZN,EAFY;AAGpB,YAAMO,aAAa,GAAG;AAClBnB,QAAAA,WAAW,EAAE,KAAKN,KAAL,CAAWM,WADN;AAElBoB,QAAAA,QAAQ,EAAE;AACNC,UAAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWO,YADX;AAENqB,UAAAA,OAAO,EAAE,KAAK5B,KAAL,CAAWQ;AAFd,SAFQ;AAMlBP,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWU,SAND;AAOlBP,QAAAA,IAAI,EAAG,KAAKH,KAAL,CAAWW,OAAX,KAAuB,MAAxB,GAAkC,IAAlC,GAAyC;AAP7B,OAAtB;AASA,YAAM,KAAKW,KAAL,CAAW7B,YAAX,CAAwByB,EAAxB,EAA4BO,aAA5B,CAAN;AACAI,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH,KA7D8B;AAAA;;AAiB/BC,EAAAA,iBAAiB,GAAG;AAAA,UACPd,EADO,GACA,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MADjB,CACPN,EADO,EAEf;;AACA7B,IAAAA,KAAK,CACJ4C,GADD,oBACiBf,EADjB,GAECgB,IAFD,CAEMC,GAAG,IACN,KAAKnB,QAAL,CAAc;AACVX,MAAAA,KAAK,EAAE8B,GAAG,CAACC,IAAJ,CAAS/B,KADN;AAEVJ,MAAAA,MAAM,EAAEkC,GAAG,CAACC,IAAJ,CAASnC,MAFP;AAGVS,MAAAA,SAAS,EAAEyB,GAAG,CAACC,IAAJ,CAASnC,MAHV;AAIVE,MAAAA,IAAI,EAAGgC,GAAG,CAACC,IAAJ,CAASjC,IAAT,KAAkB,IAAnB,GAA2B,MAA3B,GAAoC,QAJhC;AAKVQ,MAAAA,OAAO,EAAGwB,GAAG,CAACC,IAAJ,CAASjC,IAAT,KAAkB,IAAnB,GAA2B,MAA3B,GAAoC,QALnC;AAMVD,MAAAA,OAAO,EAAEiC,GAAG,CAACC,IAAJ,CAASC,SANR;AAOVjC,MAAAA,OAAO,EAAE+B,GAAG,CAACC,IAAJ,CAASE,SAPR;AAQVhC,MAAAA,WAAW,EAAE6B,GAAG,CAACC,IAAJ,CAAS9B,WARZ;AASVC,MAAAA,YAAY,EAAE,CAAC,CAAC4B,GAAG,CAACC,IAAJ,IAAY,EAAb,EAAiBV,QAAjB,IAA6B,EAA9B,EAAkCC,IATtC;AAUVnB,MAAAA,eAAe,EAAE,CAAC,CAAC2B,GAAG,CAACC,IAAJ,IAAY,EAAb,EAAiBV,QAAjB,IAA6B,EAA9B,EAAkCE,OAVzC;AAWVhB,MAAAA,QAAQ,EAAEuB,GAAG,CAACC,IAAJ,CAASxB,QAXT;AAYVH,MAAAA,MAAM,EAAE,CAAC,CAAC0B,GAAG,CAACC,IAAJ,IAAY,EAAb,EAAiB3B,MAAjB,IAA2B,EAA5B,EAAgCkB;AAZ9B,KAAd,CAHH,EAkBCY,KAlBD,CAkBOC,GAAG,IACPC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAnBH;AAqBJ;;AAsBDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,CADJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK3C,KAAL,CAAWK,KAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKL,KAAL,CAAWC,MAAhB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,KAAL,CAAWG,IAAX,KAAoB,MAArB,GAA+B,MAA/B,GAAwC,QAA7C,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKH,KAAL,CAAWS,MAAhB,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKT,KAAL,CAAWE,OAAX,CAAmB0C,SAAnB,CAA6B,CAA7B,EAA+B,EAA/B,CAAL,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK5C,KAAL,CAAWI,OAAX,CAAmBwC,SAAnB,CAA6B,CAA7B,EAA+B,EAA/B,CAAL,CANJ,CADJ,CAXJ,CADJ,EAuBI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKxB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,UAAjB;AAA4B,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWM,WAA9C;AAA2D,MAAA,QAAQ,EAAE,KAAKQ,QAA1E;AAAoF,MAAA,WAAW,EAAC,0BAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADA,EAKA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWU,SAA5C;AAAuD,MAAA,QAAQ,EAAE,KAAKI,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,CAFJ,CALA,EAeA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWW,OAA5C;AAAqD,MAAA,QAAQ,EAAE,KAAKG,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CAFJ,CAfA,EAsBA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,QAAQ,EAAE,KAAKA,QAAzC;AAAmD,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWO,YAArE;AAAmF,MAAA,WAAW,EAAC,uBAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAtBA,EA0BA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,QAAQ,EAAE,KAAKO,QAAzC;AAAmD,MAAA,KAAK,EAAE,KAAKd,KAAL,CAAWQ,eAArE;AAAsF,MAAA,WAAW,EAAC,+BAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CA1BA,EA8BA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BA,CAvBJ,CADJ;AA0DH;;AA1H8B;;AA6HnCT,UAAU,CAAC8C,SAAX,GAAuB;AACnBpD,EAAAA,YAAY,EAAEE,SAAS,CAACmD,IAAV,CAAeC;AADV,CAAvB;AAIA,eAAevD,OAAO,CAAC,IAAD,EAAO;AAAEE,EAAAA,YAAF;AAAgBD,EAAAA;AAAhB,CAAP,CAAP,CAA8CM,UAA9C,CAAf","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateTicket } from '../actions/ticketActions';\nimport { returnErrors } from '../actions/errorActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Table } from 'react-bootstrap';\n\n\nclass TicketPage extends Component {\n    state = {\n        status: '',\n        created: '',\n        open: '',\n        updated: '',\n        title: '',\n        description: '',\n        customerName: '',\n        customerContact: '',\n        author: '',\n        newStatus: '',\n        newOpen: '',\n        comments:  [],\n        errors: {}\n    }\n\n    componentDidMount() {\n         const { id } = this.props.match.params;\n         //this.props.getTicket(id)\n         axios\n         .get(`/tickets/${id}`)\n         .then(res => \n            this.setState({\n                title: res.data.title,\n                status: res.data.status,\n                newStatus: res.data.status,\n                open: (res.data.open === true) ? 'Open' : 'Closed',\n                newOpen: (res.data.open === true) ? 'Open' : 'Closed',\n                created: res.data.createdAt,\n                updated: res.data.updatedAt,\n                description: res.data.description,\n                customerName: ((res.data || {}).customer || {}).name,\n                customerContact: ((res.data || {}).customer || {}).contact,\n                comments: res.data.comments,\n                author: ((res.data || {}).author || {}).name\n            })\n         )\n         .catch(err => \n            console.log(err)\n        );\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.id] : e.target.value })\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault();\n        const { id } = this.props.match.params;\n        const updatedTicket = {\n            description: this.state.description,\n            customer: {\n                name: this.state.customerName,\n                contact: this.state.customerContact\n            },\n            status: this.state.newStatus,\n            open: (this.state.newOpen === 'Open') ? true : false\n        }\n        await this.props.updateTicket(id, updatedTicket);\n        window.location.reload(false);\n    }\n\n    render() {\n        return (\n            <div>\n                <Table bordered hover>\n                    <thead>\n                        <tr>\n                            <td>Title</td>\n                            <td>Status</td>\n                            <td>Open?</td>\n                            <td>Author</td> \n                            <td>Created Date</td>\n                            <td>Last Modified</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{this.state.title}</td>\n                            <td>{this.state.status}</td>\n                            <td>{(this.state.open === 'Open') ? 'Open' : 'Closed'}</td>\n                            <td>{this.state.author}</td>\n                            <td>{this.state.created.substring(0,19)}</td>\n                            <td>{this.state.updated.substring(0,19)}</td>\n                        </tr>\n                    </tbody>\n                </Table>\n                <Form onSubmit={this.onSubmit}>\n                <Form.Group controlId=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control as='textarea' value={this.state.description} onChange={this.onChange} placeholder=\"Enter ticket description\" />\n                </Form.Group>\n                <Form.Group controlId='newStatus'>\n                    <Form.Label>Status</Form.Label>\n                    <Form.Control as='select' value={this.state.newStatus} onChange={this.onChange}>\n                        <option>New</option>\n                        <option>Awaiting Customer Feedback</option>\n                        <option>In Progress</option>\n                        <option>Cancelled</option>\n                        <option>Resolved</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId='newOpen'>\n                    <Form.Label>State</Form.Label>\n                    <Form.Control as='select' value={this.state.newOpen} onChange={this.onChange}>\n                        <option>Open</option>\n                        <option>Closed</option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"customerName\">\n                    <Form.Label>Customer Name</Form.Label>\n                    <Form.Control type='text' onChange={this.onChange} value={this.state.customerName} placeholder=\"Enter Customer's Name\" />\n                </Form.Group>\n                <Form.Group controlId=\"customerContact\">\n                    <Form.Label>Customer Contact</Form.Label>\n                    <Form.Control type='text' onChange={this.onChange} value={this.state.customerContact} placeholder=\"Enter Customer's Contact Info\" />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\nTicketPage.propTypes = {\n    updateTicket: PropTypes.func.isRequired\n}\n\nexport default connect(null, { returnErrors, updateTicket })(TicketPage)"]},"metadata":{},"sourceType":"module"}