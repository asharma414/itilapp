{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateTicket } from '../actions/ticketActions';\nimport { returnErrors } from '../actions/errorActions';\nimport { addComment } from '../actions/commentActions';\nimport { findUser } from '../actions/userActions';\nimport PropTypes from 'prop-types';\nimport LoadingScreen from './loadingscreen';\nimport { Form, Button, Table, Row, Col } from 'react-bootstrap';\nimport dompurify from 'dompurify';\nimport moment from 'moment';\nconst sanitizer = dompurify.sanitize;\n\nclass TicketPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      status: '',\n      created: '',\n      open: '',\n      updated: '',\n      title: '',\n      description: '',\n      customerName: '',\n      customerContact: '',\n      author: '',\n      newStatus: '',\n      newOpen: '',\n      comments: [],\n      loading: false,\n      commentText: '',\n      assignedTo: '',\n      commentToggle: false,\n      errors: {}\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.commentPost = async text => {\n      const id = this.props.match.params.id;\n      const userId = this.props.auth.user.id;\n      const username = this.props.auth.user.name;\n      const newComment = {\n        text: text,\n        author: {\n          id: userId,\n          name: username\n        }\n      };\n      await this.props.addComment(id, newComment);\n      this.getTicket();\n    };\n\n    this.ticketSubmit = async e => {\n      e.preventDefault();\n      const id = this.props.match.params.id;\n\n      if (this.state.newStatus !== this.state.status) {\n        this.commentPost(\"Status is <i>\".concat(this.state.newStatus, \"</i> was <i>\").concat(this.state.status, \"</i>\"));\n      }\n\n      if (this.state.newOpen !== this.state.open) {\n        this.commentPost(\"State is <i>\".concat(this.state.newOpen, \"</i> was <i>\").concat(this.state.open, \"</i>\"));\n      }\n\n      const updatedTicket = {\n        description: this.state.description,\n        customer: {\n          name: this.state.customerName,\n          contact: this.state.customerContact\n        },\n        status: this.state.newStatus,\n        open: this.state.newOpen === 'Open' ? true : false\n      };\n      await this.props.updateTicket(id, updatedTicket);\n      this.getTicket();\n    };\n\n    this.commentSubmit = e => {\n      e.preventDefault();\n      this.commentPost(this.state.commentText);\n    };\n  }\n\n  getTicket() {\n    const id = this.props.match.params.id;\n    axios.get(\"/tickets/\".concat(id)).then(res => this.setState({\n      title: res.data.title,\n      status: res.data.status,\n      newStatus: res.data.status,\n      open: res.data.open === true ? 'Open' : 'Closed',\n      newOpen: res.data.open === true ? 'Open' : 'Closed',\n      created: res.data.createdAt,\n      updated: res.data.updatedAt,\n      description: res.data.description,\n      customerName: ((res.data || {}).customer || {}).name,\n      customerContact: ((res.data || {}).customer || {}).contact,\n      comments: res.data.comments,\n      author: ((res.data || {}).author || {}).name,\n      loading: false\n    })).catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    if (this.props.errors) {\n      this.setState({\n        errors: this.props.errors\n      });\n    }\n\n    this.props.findUser();\n    this.getTicket();\n    this.setState({\n      loading: true\n    });\n  }\n\n  render() {\n    if (this.state.loading === true) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(LoadingScreen, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: \"my-4\",\n        bordered: true,\n        hover: true,\n        responsive: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Title\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Status\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Open?\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Author\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Created\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Last Modified\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, this.state.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, this.state.status), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, this.state.open === 'Open' ? 'Open' : 'Closed'), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, this.state.author), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, this.state.created.substring(0, 19)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, this.state.updated.substring(0, 19))))), React.createElement(Form, {\n        onSubmit: this.ticketSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"customerName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Customer Name\"), React.createElement(Form.Control, {\n        type: \"text\",\n        onChange: this.onChange,\n        value: this.state.customerName,\n        placeholder: \"Customer's Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"customerContact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Customer Contact\"), React.createElement(Form.Control, {\n        type: \"text\",\n        onChange: this.onChange,\n        value: this.state.customerContact,\n        placeholder: \"Customer's Contact Info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"newStatus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Status\"), React.createElement(Form.Control, {\n        as: \"select\",\n        value: this.state.newStatus,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"New\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Awaiting Customer Feedback\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"In Progress\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Cancelled\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Resolved\")))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"newOpen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"State\"), React.createElement(Form.Control, {\n        as: \"select\",\n        value: this.state.newOpen,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Open\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Closed\"))))), React.createElement(Form.Group, {\n        controlId: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Form.Control, {\n        as: \"textarea\",\n        value: this.state.description,\n        onChange: this.onChange,\n        placeholder: \"Ticket description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"div\", {\n        className: \"my-4 commentForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.commentSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"commentText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"New Comment\"), React.createElement(Form.Control, {\n        as: \"textarea\",\n        value: this.state.newComment,\n        onChange: this.onChange,\n        placeholder: \"Enter ticket description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Post Comment\"))), this.state.comments.map(comment => React.createElement(\"div\", {\n        key: comment._id,\n        className: \"mt-3 card-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, comment.author.name)), React.createElement(\"div\", {\n        className: \"text-right col-md-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, moment(comment.createdAt).fromNow())), React.createElement(\"p\", {\n        dangerouslySetInnerHTML: {\n          __html: sanitizer(comment.text)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }))))));\n    }\n  }\n\n}\n\nTicketPage.propTypes = {\n  updateTicket: PropTypes.func.isRequired,\n  addComment: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  findUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  returnErrors,\n  updateTicket,\n  addComment,\n  findUser\n})(TicketPage);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/ticketpage.js"],"names":["axios","React","Component","connect","updateTicket","returnErrors","addComment","findUser","PropTypes","LoadingScreen","Form","Button","Table","Row","Col","dompurify","moment","sanitizer","sanitize","TicketPage","state","status","created","open","updated","title","description","customerName","customerContact","author","newStatus","newOpen","comments","loading","commentText","assignedTo","commentToggle","errors","onChange","e","setState","target","id","value","commentPost","text","props","match","params","userId","auth","user","username","name","newComment","getTicket","ticketSubmit","preventDefault","updatedTicket","customer","contact","commentSubmit","get","then","res","data","createdAt","updatedAt","catch","err","console","log","componentDidMount","render","substring","map","comment","_id","fromNow","__html","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,GAA9B,EAAmCC,GAAnC,QAA8C,iBAA9C;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,MAAMC,SAAS,GAAGF,SAAS,CAACG,QAA5B;;AAEA,MAAMC,UAAN,SAAyBjB,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BkB,KAD+B,GACvB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAE,EAFL;AAGJC,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,OAAO,EAAE,EAJL;AAKJC,MAAAA,KAAK,EAAE,EALH;AAMJC,MAAAA,WAAW,EAAE,EANT;AAOJC,MAAAA,YAAY,EAAE,EAPV;AAQJC,MAAAA,eAAe,EAAE,EARb;AASJC,MAAAA,MAAM,EAAE,EATJ;AAUJC,MAAAA,SAAS,EAAE,EAVP;AAWJC,MAAAA,OAAO,EAAE,EAXL;AAYJC,MAAAA,QAAQ,EAAG,EAZP;AAaJC,MAAAA,OAAO,EAAE,KAbL;AAcJC,MAAAA,WAAW,EAAE,EAdT;AAeJC,MAAAA,UAAU,EAAE,EAfR;AAgBJC,MAAAA,aAAa,EAAE,KAhBX;AAiBJC,MAAAA,MAAM,EAAE;AAjBJ,KADuB;;AAAA,SAwD/BC,QAxD+B,GAwDnBC,CAAD,IAAO;AACd,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAgBH,CAAC,CAACE,MAAF,CAASE;AAA3B,OAAd;AACH,KA1D8B;;AAAA,SA4D/BC,WA5D+B,GA4DjB,MAAOC,IAAP,IAAgB;AAAA,YAClBH,EADkB,GACX,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MADN,CAClBN,EADkB;AAE1B,YAAMO,MAAM,GAAG,KAAKH,KAAL,CAAWI,IAAX,CAAgBC,IAAhB,CAAqBT,EAApC;AACA,YAAMU,QAAQ,GAAG,KAAKN,KAAL,CAAWI,IAAX,CAAgBC,IAAhB,CAAqBE,IAAtC;AACA,YAAMC,UAAU,GAAG;AACfT,QAAAA,IAAI,EAAEA,IADS;AAEfhB,QAAAA,MAAM,EAAE;AACJa,UAAAA,EAAE,EAAEO,MADA;AAEJI,UAAAA,IAAI,EAAED;AAFF;AAFO,OAAnB;AAOA,YAAM,KAAKN,KAAL,CAAWxC,UAAX,CAAsBoC,EAAtB,EAA0BY,UAA1B,CAAN;AACA,WAAKC,SAAL;AACH,KAzE8B;;AAAA,SA2E/BC,YA3E+B,GA2EhB,MAAOjB,CAAP,IAAa;AACxBA,MAAAA,CAAC,CAACkB,cAAF;AADwB,YAEhBf,EAFgB,GAET,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAFR,CAEhBN,EAFgB;;AAGxB,UAAI,KAAKtB,KAAL,CAAWU,SAAX,KAAyB,KAAKV,KAAL,CAAWC,MAAxC,EAAgD;AAC5C,aAAKuB,WAAL,wBAAiC,KAAKxB,KAAL,CAAWU,SAA5C,yBAAoE,KAAKV,KAAL,CAAWC,MAA/E;AACH;;AACD,UAAI,KAAKD,KAAL,CAAWW,OAAX,KAAuB,KAAKX,KAAL,CAAWG,IAAtC,EAA4C;AACxC,aAAKqB,WAAL,uBAAgC,KAAKxB,KAAL,CAAWW,OAA3C,yBAAiE,KAAKX,KAAL,CAAWG,IAA5E;AACH;;AACD,YAAMmC,aAAa,GAAG;AAClBhC,QAAAA,WAAW,EAAE,KAAKN,KAAL,CAAWM,WADN;AAElBiC,QAAAA,QAAQ,EAAE;AACNN,UAAAA,IAAI,EAAE,KAAKjC,KAAL,CAAWO,YADX;AAENiC,UAAAA,OAAO,EAAE,KAAKxC,KAAL,CAAWQ;AAFd,SAFQ;AAMlBP,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWU,SAND;AAOlBP,QAAAA,IAAI,EAAG,KAAKH,KAAL,CAAWW,OAAX,KAAuB,MAAxB,GAAkC,IAAlC,GAAyC;AAP7B,OAAtB;AASA,YAAM,KAAKe,KAAL,CAAW1C,YAAX,CAAwBsC,EAAxB,EAA4BgB,aAA5B,CAAN;AACA,WAAKH,SAAL;AACH,KA/F8B;;AAAA,SAiG/BM,aAjG+B,GAiGdtB,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACkB,cAAF;AACA,WAAKb,WAAL,CAAiB,KAAKxB,KAAL,CAAWc,WAA5B;AACH,KApG8B;AAAA;;AAqB/BqB,EAAAA,SAAS,GAAG;AAAA,UACAb,EADA,GACO,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MADxB,CACAN,EADA;AAER1C,IAAAA,KAAK,CACA8D,GADL,oBACqBpB,EADrB,GAEKqB,IAFL,CAEUC,GAAG,IACL,KAAKxB,QAAL,CAAc;AACVf,MAAAA,KAAK,EAAEuC,GAAG,CAACC,IAAJ,CAASxC,KADN;AAEVJ,MAAAA,MAAM,EAAE2C,GAAG,CAACC,IAAJ,CAAS5C,MAFP;AAGVS,MAAAA,SAAS,EAAEkC,GAAG,CAACC,IAAJ,CAAS5C,MAHV;AAIVE,MAAAA,IAAI,EAAGyC,GAAG,CAACC,IAAJ,CAAS1C,IAAT,KAAkB,IAAnB,GAA2B,MAA3B,GAAoC,QAJhC;AAKVQ,MAAAA,OAAO,EAAGiC,GAAG,CAACC,IAAJ,CAAS1C,IAAT,KAAkB,IAAnB,GAA2B,MAA3B,GAAoC,QALnC;AAMVD,MAAAA,OAAO,EAAE0C,GAAG,CAACC,IAAJ,CAASC,SANR;AAOV1C,MAAAA,OAAO,EAAEwC,GAAG,CAACC,IAAJ,CAASE,SAPR;AAQVzC,MAAAA,WAAW,EAAEsC,GAAG,CAACC,IAAJ,CAASvC,WARZ;AASVC,MAAAA,YAAY,EAAE,CAAC,CAACqC,GAAG,CAACC,IAAJ,IAAY,EAAb,EAAiBN,QAAjB,IAA6B,EAA9B,EAAkCN,IATtC;AAUVzB,MAAAA,eAAe,EAAE,CAAC,CAACoC,GAAG,CAACC,IAAJ,IAAY,EAAb,EAAiBN,QAAjB,IAA6B,EAA9B,EAAkCC,OAVzC;AAWV5B,MAAAA,QAAQ,EAAEgC,GAAG,CAACC,IAAJ,CAASjC,QAXT;AAYVH,MAAAA,MAAM,EAAE,CAAC,CAACmC,GAAG,CAACC,IAAJ,IAAY,EAAb,EAAiBpC,MAAjB,IAA2B,EAA5B,EAAgCwB,IAZ9B;AAaVpB,MAAAA,OAAO,EAAE;AAbC,KAAd,CAHR,EAmBKmC,KAnBL,CAmBWC,GAAG,IACNC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CApBR;AAsBH;;AAEDG,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAK1B,KAAL,CAAWT,MAAf,EAAuB;AACnB,WAAKG,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAE,KAAKS,KAAL,CAAWT;AAArB,OAAd;AACH;;AACD,SAAKS,KAAL,CAAWvC,QAAX;AACA,SAAKgD,SAAL;AACA,SAAKf,QAAL,CAAc;AAAEP,MAAAA,OAAO,EAAE;AAAX,KAAd;AACH;;AAgDDwC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKrD,KAAL,CAAWa,OAAX,KAAuB,IAA3B,EAAiC;AAC7B,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH,KAND,MAMO;AACH,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAwB,QAAA,QAAQ,MAAhC;AAAiC,QAAA,KAAK,MAAtC;AAAuC,QAAA,UAAU,EAAC,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANJ,CADJ,CADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKb,KAAL,CAAWK,KAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKL,KAAL,CAAWC,MAAhB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKD,KAAL,CAAWG,IAAX,KAAoB,MAArB,GAA+B,MAA/B,GAAwC,QAA7C,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKH,KAAL,CAAWS,MAAhB,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKT,KAAL,CAAWE,OAAX,CAAmBoD,SAAnB,CAA6B,CAA7B,EAA+B,EAA/B,CAAL,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKtD,KAAL,CAAWI,OAAX,CAAmBkD,SAAnB,CAA6B,CAA7B,EAA+B,EAA/B,CAAL,CANJ,CADJ,CAXJ,CADJ,EAuBI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKlB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,QAAQ,EAAE,KAAKlB,QAAzC;AAAmD,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWO,YAArE;AAAmF,QAAA,WAAW,EAAC,iBAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CADJ,EAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,QAAQ,EAAE,KAAKW,QAAzC;AAAmD,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWQ,eAArE;AAAsF,QAAA,WAAW,EAAC,yBAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CAPJ,CADJ,EAeI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,EAAE,EAAC,QAAjB;AAA0B,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWU,SAA5C;AAAuD,QAAA,QAAQ,EAAE,KAAKQ,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,CAFJ,CADJ,CADJ,EAaI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,EAAE,EAAC,QAAjB;AAA0B,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWW,OAA5C;AAAqD,QAAA,QAAQ,EAAE,KAAKO,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAFJ,CADJ,CAbJ,CAfJ,EAsCI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,EAAE,EAAC,UAAjB;AAA4B,QAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWM,WAA9C;AAA2D,QAAA,QAAQ,EAAE,KAAKY,QAA1E;AAAoF,QAAA,WAAW,EAAC,oBAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAtCJ,EA0CI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1CJ,CAvBJ,EAmEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKuB,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,EAAE,EAAC,UAAjB;AAA4B,QAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWkC,UAA9C;AAA0D,QAAA,QAAQ,EAAE,KAAKhB,QAAzE;AAAmF,QAAA,WAAW,EAAC,0BAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADA,EAKA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALA,CADJ,CAnEJ,EA4ES,KAAKlB,KAAL,CAAWY,QAAX,CAAoB2C,GAApB,CAAwBC,OAAO,IAC5B;AAAK,QAAA,GAAG,EAAEA,OAAO,CAACC,GAAlB;AAAuB,QAAA,SAAS,EAAC,kBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASD,OAAO,CAAC/C,MAAR,CAAewB,IAAxB,CAA1B,CADJ,EAEI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCrC,MAAM,CAAC4D,OAAO,CAACV,SAAT,CAAN,CAA0BY,OAA1B,EAAtC,CAFJ,CADJ,EAKI;AAAG,QAAA,uBAAuB,EAAE;AAACC,UAAAA,MAAM,EAAE9D,SAAS,CAAC2D,OAAO,CAAC/B,IAAT;AAAlB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADR,CADJ,CADH,CA5ET,CADJ;AA4FH;AACJ;;AA3M8B;;AA8MnC1B,UAAU,CAAC6D,SAAX,GAAuB;AACnB5E,EAAAA,YAAY,EAAEI,SAAS,CAACyE,IAAV,CAAeC,UADV;AAEnB5E,EAAAA,UAAU,EAAEE,SAAS,CAACyE,IAAV,CAAeC,UAFR;AAGnBhC,EAAAA,IAAI,EAAE1C,SAAS,CAAC2E,MAAV,CAAiBD,UAHJ;AAInB7C,EAAAA,MAAM,EAAE7B,SAAS,CAAC2E,MAAV,CAAiBD,UAJN;AAKnB3E,EAAAA,QAAQ,EAAEC,SAAS,CAACyE,IAAV,CAAeC,UALN;AAMnB/B,EAAAA,IAAI,EAAE3C,SAAS,CAAC2E,MAAV,CAAiBD;AANJ,CAAvB;;AASA,MAAME,eAAe,GAAIhE,KAAD,KAAY;AAChC8B,EAAAA,IAAI,EAAE9B,KAAK,CAAC8B,IADoB;AAEhCb,EAAAA,MAAM,EAAEjB,KAAK,CAACiB,MAFkB;AAGhCc,EAAAA,IAAI,EAAE/B,KAAK,CAAC+B;AAHoB,CAAZ,CAAxB;;AAMA,eAAehD,OAAO,CAACiF,eAAD,EAAkB;AAAE/E,EAAAA,YAAF;AAAgBD,EAAAA,YAAhB;AAA8BE,EAAAA,UAA9B;AAA0CC,EAAAA;AAA1C,CAAlB,CAAP,CAA+EY,UAA/E,CAAf","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateTicket } from '../actions/ticketActions';\nimport { returnErrors } from '../actions/errorActions';\nimport { addComment } from '../actions/commentActions';\nimport { findUser } from '../actions/userActions';\nimport PropTypes from 'prop-types';\nimport LoadingScreen from './loadingscreen';\nimport { Form, Button, Table, Row, Col } from 'react-bootstrap';\nimport dompurify from 'dompurify';\nimport moment from 'moment';\nconst sanitizer = dompurify.sanitize;\n\nclass TicketPage extends Component {\n    state = {\n        status: '',\n        created: '',\n        open: '',\n        updated: '',\n        title: '',\n        description: '',\n        customerName: '',\n        customerContact: '',\n        author: '',\n        newStatus: '',\n        newOpen: '',\n        comments:  [],\n        loading: false,\n        commentText: '',\n        assignedTo: '',\n        commentToggle: false,\n        errors: {}\n    }\n\n    getTicket() {\n        const { id } = this.props.match.params;\n        axios\n            .get(`/tickets/${id}`)\n            .then(res => \n                this.setState({\n                    title: res.data.title,\n                    status: res.data.status,\n                    newStatus: res.data.status,\n                    open: (res.data.open === true) ? 'Open' : 'Closed',\n                    newOpen: (res.data.open === true) ? 'Open' : 'Closed',\n                    created: res.data.createdAt,\n                    updated: res.data.updatedAt,\n                    description: res.data.description,\n                    customerName: ((res.data || {}).customer || {}).name,\n                    customerContact: ((res.data || {}).customer || {}).contact,\n                    comments: res.data.comments,\n                    author: ((res.data || {}).author || {}).name,\n                    loading: false\n                })\n            )\n            .catch(err => \n                console.log(err)\n        );\n    }\n\n    componentDidMount() {\n        if (this.props.errors) {\n            this.setState({ errors: this.props.errors })\n        }\n        this.props.findUser();\n        this.getTicket();\n        this.setState({ loading: true })\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.id] : e.target.value })\n    }\n\n    commentPost = async (text) => {\n        const { id } = this.props.match.params;\n        const userId = this.props.auth.user.id;\n        const username = this.props.auth.user.name;\n        const newComment = {\n            text: text,\n            author: {\n                id: userId,\n                name: username\n            }\n        }\n        await this.props.addComment(id, newComment);\n        this.getTicket();\n    }\n\n    ticketSubmit = async (e) => {\n        e.preventDefault();\n        const { id } = this.props.match.params;\n        if (this.state.newStatus !== this.state.status) {\n            this.commentPost(`Status is <i>${this.state.newStatus}</i> was <i>${this.state.status}</i>`)\n        }\n        if (this.state.newOpen !== this.state.open) {\n            this.commentPost(`State is <i>${this.state.newOpen}</i> was <i>${this.state.open}</i>`)\n        }\n        const updatedTicket = {\n            description: this.state.description,\n            customer: {\n                name: this.state.customerName,\n                contact: this.state.customerContact\n            },\n            status: this.state.newStatus,\n            open: (this.state.newOpen === 'Open') ? true : false\n        }\n        await this.props.updateTicket(id, updatedTicket);\n        this.getTicket();\n    }\n\n    commentSubmit = (e) => {\n        e.preventDefault();\n        this.commentPost(this.state.commentText)\n    }\n\n    render() {\n        if (this.state.loading === true) {\n            return (\n                <div className='container'>\n                    <LoadingScreen />\n                </div>\n            )\n        } else {\n            return (\n                <div className='container'>\n                    <Table className='my-4' bordered hover responsive='md'>\n                        <thead>\n                            <tr>\n                                <td>Title</td>\n                                <td>Status</td>\n                                <td>Open?</td>\n                                <td>Author</td> \n                                <td>Created</td>\n                                <td>Last Modified</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>{this.state.title}</td>\n                                <td>{this.state.status}</td>\n                                <td>{(this.state.open === 'Open') ? 'Open' : 'Closed'}</td>\n                                <td>{this.state.author}</td>\n                                <td>{this.state.created.substring(0,19)}</td>\n                                <td>{this.state.updated.substring(0,19)}</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                    <Form onSubmit={this.ticketSubmit}>\n                        <Row>\n                            <Col>\n                                <Form.Group controlId=\"customerName\">\n                                    <Form.Label>Customer Name</Form.Label>\n                                    <Form.Control type='text' onChange={this.onChange} value={this.state.customerName} placeholder=\"Customer's Name\" />\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group controlId=\"customerContact\">\n                                    <Form.Label>Customer Contact</Form.Label>\n                                    <Form.Control type='text' onChange={this.onChange} value={this.state.customerContact} placeholder=\"Customer's Contact Info\" />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Form.Group controlId='newStatus'>\n                                    <Form.Label>Status</Form.Label>\n                                    <Form.Control as='select' value={this.state.newStatus} onChange={this.onChange}>\n                                        <option>New</option>\n                                        <option>Awaiting Customer Feedback</option>\n                                        <option>In Progress</option>\n                                        <option>Cancelled</option>\n                                        <option>Resolved</option>\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                            <Col>\n                                <Form.Group controlId='newOpen'>\n                                    <Form.Label>State</Form.Label>\n                                    <Form.Control as='select' value={this.state.newOpen} onChange={this.onChange}>\n                                        <option>Open</option>\n                                        <option>Closed</option>\n                                    </Form.Control>\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Form.Group controlId=\"description\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control as='textarea' value={this.state.description} onChange={this.onChange} placeholder=\"Ticket description\" />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                    </Form>\n                    <div className='my-4 commentForm'>\n                        <Form onSubmit={this.commentSubmit}>\n                        <Form.Group controlId=\"commentText\">\n                            <Form.Label>New Comment</Form.Label>\n                            <Form.Control as='textarea' value={this.state.newComment} onChange={this.onChange} placeholder=\"Enter ticket description\" />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">Post Comment</Button>\n                        </Form>\n                    </div>\n                        {this.state.comments.map(comment =>\n                            <div key={comment._id} className=\"mt-3 card-footer\"> \n                                <div className='row'>\n                                        <div className='col-md-12'>\n                                            <div className='row'>\n                                                <div className='col-md-9'><strong>{comment.author.name}</strong></div>\n                                                <div className='text-right col-md-3'>{moment(comment.createdAt).fromNow()}</div>\n                                            </div>\n                                            <p dangerouslySetInnerHTML={{__html: sanitizer(comment.text)}}></p>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n            )\n        }\n    }\n}\n\nTicketPage.propTypes = {\n    updateTicket: PropTypes.func.isRequired,\n    addComment: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired,\n    findUser: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors,\n    user: state.user\n});\n\nexport default connect(mapStateToProps, { returnErrors, updateTicket, addComment, findUser })(TicketPage)"]},"metadata":{},"sourceType":"module"}