{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/ticketlist.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTickets } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport LoadingScreen from './loadingscreen';\n\nclass TicketList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showDetails = path => {\n      this.props.history.push(path);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getTickets('', '');\n  }\n\n  render() {\n    const {\n      tickets\n    } = this.props.ticket;\n    const {\n      loading\n    } = this.props.ticket;\n\n    if (loading === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(LoadingScreen, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }));\n    } else if (tickets.length < 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, \"No results found\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        className: \"my-4\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        onClick: sortTable(0),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 33\n        }\n      }, \"Title\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }\n      }, \"Open?\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }\n      }, \"Author\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      }, \"Assigned To\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }\n      }, \"Created\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }\n      }, \"Last Modified\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, tickets.map(ticket => /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"ticket\",\n        key: ticket._id,\n        onClick: () => this.showDetails(`/tickets/${ticket._id}`),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 37\n        }\n      }, ticket.title), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }\n      }, ticket.description.substring(0, 25)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 37\n        }\n      }, ticket.status), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }\n      }, ticket.open === true ? 'Open' : 'Closed'), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }\n      }, ticket.author.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 37\n        }\n      }, ticket.assignedTo.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 37\n        }\n      }, ticket.createdAt.substring(0, 19)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 37\n        }\n      }, ticket.updatedAt.substring(0, 19)))))));\n    }\n  }\n\n}\n\nTicketList.propTypes = {\n  getTickets: PropTypes.func.isRequired,\n  ticket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, {\n  getTickets\n})(withRouter(TicketList));","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/ticketlist.js"],"names":["React","Component","connect","getTickets","PropTypes","Table","withRouter","LoadingScreen","TicketList","showDetails","path","props","history","push","componentDidMount","render","tickets","ticket","loading","length","sortTable","map","_id","title","description","substring","status","open","author","name","assignedTo","createdAt","updatedAt","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getTickets } from '../actions/ticketActions';\nimport PropTypes from 'prop-types';\nimport { Table } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport LoadingScreen from './loadingscreen';\n\nclass TicketList extends Component {\n\n    componentDidMount() {\n        this.props.getTickets('', '');\n    }\n\n    showDetails = (path) => {\n        this.props.history.push(path);\n    }\n\n    render() {\n        const { tickets } = this.props.ticket;\n        const { loading } = this.props.ticket;\n        if (loading === true) {\n            return (\n                <div className='container'>\n                    <LoadingScreen />\n                </div>\n            )\n        } else if (tickets.length < 1) {\n            return (\n                <div>\n                    No results found\n                </div>\n            )\n        } else {\n            return (\n                <div className='container'>\n                    <Table className='my-4' striped bordered hover responsive='md'>\n                        <thead>\n                            <tr>\n                                <th onClick={sortTable(0)}>Title</th>\n                                <th>Description</th>\n                                <th>Status</th>\n                                <th>Open?</th>\n                                <th>Author</th> \n                                <th>Assigned To</th>\n                                <th>Created</th>\n                                <th>Last Modified</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {tickets.map(ticket => (\n                            <tr className='ticket' key={ticket._id} onClick={() => this.showDetails(`/tickets/${ticket._id}`)}>\n                                    <td>{ticket.title}</td>\n                                    <td>{ticket.description.substring(0, 25)}</td>\n                                    <td>{ticket.status}</td>\n                                    <td>{(ticket.open === true) ? 'Open' : 'Closed'}</td>\n                                    <td>{ticket.author.name}</td>\n                                    <td>{ticket.assignedTo.name}</td>\n                                    <td>{ticket.createdAt.substring(0,19)}</td>\n                                    <td>{ticket.updatedAt.substring(0,19)}</td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </Table>\n                </div>\n            );\n        }   \n    }\n}\n\nTicketList.propTypes = {\n    getTickets: PropTypes.func.isRequired,\n    ticket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n    ticket: state.ticket\n});\n\nexport default connect(mapStateToProps, { getTickets })(withRouter(TicketList))"]},"metadata":{},"sourceType":"module"}