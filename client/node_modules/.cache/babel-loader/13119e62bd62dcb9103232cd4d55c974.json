{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/auth/register.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { clearErrors } from '../../actions/errorActions';\nimport { registerUser } from '../../actions/authActions';\nimport { Button, Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: ''\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n      };\n      this.props.registerUser(newUser, this.props.history, this.props.clearErrors);\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/tickets');\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.errors) {\n      return {\n        errors: nextProps.errors\n      };\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 65\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, \"      \", errors.name), /*#__PURE__*/React.createElement(Form.Control, {\n      value: this.state.name,\n      onChange: this.onChange,\n      type: \"text\",\n      error: errors.name,\n      autoComplete: \"off\",\n      placeholder: \"Enter name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, \"      \", errors.email), /*#__PURE__*/React.createElement(Form.Control, {\n      value: this.state.email,\n      onChange: this.onChange,\n      type: \"email\",\n      error: errors.email,\n      autoComplete: \"off\",\n      placeholder: \"Enter email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, \"      \", errors.password), /*#__PURE__*/React.createElement(Form.Control, {\n      value: this.state.password,\n      onChange: this.onChange,\n      type: \"password\",\n      error: errors.password,\n      autoComplete: \"new-password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"password2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }, \"      \", errors.password2), /*#__PURE__*/React.createElement(Form.Control, {\n      value: this.state.password2,\n      onChange: this.onChange,\n      type: \"password\",\n      error: errors.password2,\n      autoComplete: \"new-password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, \"Verify Email?\"), /*#__PURE__*/React.createElement(Form.Control, {\n      value: this.state.password2,\n      onChange: this.onChange,\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, \"Register\"))));\n  }\n\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerUser,\n  clearErrors\n})(withRouter(Register));","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/auth/register.js"],"names":["React","Component","withRouter","connect","Link","clearErrors","registerUser","Button","Form","PropTypes","Register","state","name","email","password","password2","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","props","history","componentDidMount","auth","isAuthenticated","push","getDerivedStateFromProps","nextProps","prevState","errors","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BU,KAD+B,GACvB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,SAAS,EAAE;AAJL,KADuB;;AAAA,SAqB7BC,QArB6B,GAqBlBC,CAAC,IAAI;AACZ,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AAA1B,OAAd;AACD,KAvB0B;;AAAA,SAwB7BC,QAxB6B,GAwBlBL,CAAC,IAAI;AACZA,MAAAA,CAAC,CAACM,cAAF;AAEA,YAAMC,OAAO,GAAG;AACVZ,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADP;AAEVC,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAFR;AAGVC,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAHX;AAIVC,QAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI;AAJZ,OAAhB;AAOA,WAAKU,KAAL,CAAWnB,YAAX,CAAwBkB,OAAxB,EAAiC,KAAKC,KAAL,CAAWC,OAA5C,EAAqD,KAAKD,KAAL,CAAWpB,WAAhE;AACC,KAnCwB;AAAA;;AAQ7BsB,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAI,KAAKF,KAAL,CAAWG,IAAX,CAAgBC,eAApB,EAAqC;AACnC,WAAKJ,KAAL,CAAWC,OAAX,CAAmBI,IAAnB,CAAwB,UAAxB;AACD;AACF;;AAED,SAAOC,wBAAP,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AACpD,QAAID,SAAS,CAACE,MAAd,EAAsB;AACpB,aAAO;AAAEA,QAAAA,MAAM,EAAEF,SAAS,CAACE;AAApB,OAAP;AACD;AACF;;AAkBDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAED,MAAAA;AAAF,QAAa,KAAKT,KAAxB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAoD,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAApD,CADF,eAEE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKH,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAqCY,MAAM,CAACtB,IAA5C,CAFJ,eAGI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,IAAhC;AAAsC,MAAA,QAAQ,EAAE,KAAKI,QAArD;AAA+D,MAAA,IAAI,EAAC,MAApE;AAA2E,MAAA,KAAK,EAAEkB,MAAM,CAACtB,IAAzF;AAA+F,MAAA,YAAY,EAAC,KAA5G;AAAkH,MAAA,WAAW,EAAC,YAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADA,eAMA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAqCsB,MAAM,CAACrB,KAA5C,CAFJ,eAGI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAhC;AAAuC,MAAA,QAAQ,EAAE,KAAKG,QAAtD;AAAgE,MAAA,IAAI,EAAC,OAArE;AAA6E,MAAA,KAAK,EAAEkB,MAAM,CAACrB,KAA3F;AAAkG,MAAA,YAAY,EAAC,KAA/G;AAAqH,MAAA,WAAW,EAAC,aAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CANA,eAWA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAqCqB,MAAM,CAACpB,QAA5C,CAFJ,eAGI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,QAAhC;AAA0C,MAAA,QAAQ,EAAE,KAAKE,QAAzD;AAAmE,MAAA,IAAI,EAAC,UAAxE;AAAmF,MAAA,KAAK,EAAEkB,MAAM,CAACpB,QAAjG;AAA2G,MAAA,YAAY,EAAC,cAAxH;AAAuI,MAAA,WAAW,EAAC,UAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAXA,eAgBA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAqCoB,MAAM,CAACnB,SAA5C,CAFJ,eAGI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,SAAhC;AAA2C,MAAA,QAAQ,EAAE,KAAKC,QAA1D;AAAoE,MAAA,IAAI,EAAC,UAAzE;AAAoF,MAAA,KAAK,EAAEkB,MAAM,CAACnB,SAAlG;AAA6G,MAAA,YAAY,EAAC,cAA1H;AAAyI,MAAA,WAAW,EAAC,UAArJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAhBA,eAqBA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,SAAhC;AAA2C,MAAA,QAAQ,EAAE,KAAKC,QAA1D;AAAoE,MAAA,IAAI,EAAC,UAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CArBA,eAyBA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAwC,MAAA,QAAQ,EAAE,KAAKM,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBA,CADF,CAFF,CADF;AAkCH;;AAzE4B;;AA4EjCZ,QAAQ,CAAC0B,SAAT,GAAqB;AACnB9B,EAAAA,YAAY,EAAEG,SAAS,CAAC4B,IAAV,CAAeC,UADV;AAEnBV,EAAAA,IAAI,EAAEnB,SAAS,CAAC8B,MAAV,CAAiBD,UAFJ;AAGnBJ,EAAAA,MAAM,EAAEzB,SAAS,CAAC8B,MAAV,CAAiBD,UAHN;AAInBjC,EAAAA,WAAW,EAAEI,SAAS,CAAC4B,IAAV,CAAeC;AAJT,CAArB;;AAOA,MAAME,eAAe,GAAG7B,KAAK,KAAK;AAChCiB,EAAAA,IAAI,EAAEjB,KAAK,CAACiB,IADoB;AAEhCM,EAAAA,MAAM,EAAEvB,KAAK,CAACuB;AAFkB,CAAL,CAA7B;;AAKA,eAAe/B,OAAO,CACpBqC,eADoB,EAEpB;AAAElC,EAAAA,YAAF;AAAgBD,EAAAA;AAAhB,CAFoB,CAAP,CAGbH,UAAU,CAACQ,QAAD,CAHG,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { clearErrors } from '../../actions/errorActions';\nimport { registerUser } from '../../actions/authActions';\nimport { Button, Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\n\nclass Register extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  };\n\n    componentDidMount() {\n      // If logged in and user navigates to Register page, should redirect them to dashboard\n      if (this.props.auth.isAuthenticated) {\n        this.props.history.push('/tickets');\n      }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.errors) {\n        return { errors: nextProps.errors }\n      }\n    }\n  \n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n      };\n    onSubmit = e => {\n        e.preventDefault();\n        \n        const newUser = {\n              name: this.state.name,\n              email: this.state.email,\n              password: this.state.password,\n              password2: this.state.password2\n        };\n            \n        this.props.registerUser(newUser, this.props.history, this.props.clearErrors);\n        };\n\n    render() {\n        const { errors } = this.props;\n        return (\n          <div className='container mt-4'>\n            <p className='text-center'>Already have an account? <Link to='/login'>Login</Link></p>\n            <div className='d-flex justify-content-center'>\n              <Form onSubmit={this.onSubmit}>\n              <Form.Group controlId='name'>\n                  <Form.Label>Name</Form.Label>\n                  <span className='text-danger'>      {errors.name}</span>\n                  <Form.Control value={this.state.name} onChange={this.onChange} type='text' error={errors.name} autoComplete='off' placeholder='Enter name' />\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                  <Form.Label>Email address</Form.Label>\n                  <span className='text-danger'>      {errors.email}</span>\n                  <Form.Control value={this.state.email} onChange={this.onChange} type=\"email\" error={errors.email} autoComplete='off' placeholder=\"Enter email\" />\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                  <Form.Label>Password</Form.Label>\n                  <span className='text-danger'>      {errors.password}</span>\n                  <Form.Control value={this.state.password} onChange={this.onChange} type=\"password\" error={errors.password} autoComplete='new-password' placeholder=\"Password\" />\n              </Form.Group>\n              <Form.Group controlId=\"password2\">\n                  <Form.Label>Confirm Password</Form.Label>\n                  <span className='text-danger'>      {errors.password2}</span>\n                  <Form.Control value={this.state.password2} onChange={this.onChange} type=\"password\" error={errors.password2} autoComplete='new-password' placeholder=\"Password\" />\n              </Form.Group>\n              <Form.Group controlId=\"test\">\n                  <Form.Label>Verify Email?</Form.Label>\n                  <Form.Control value={this.state.password2} onChange={this.onChange} type=\"checkbox\" />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\" onSubmit={this.onSubmit}>Register</Button>\n              </Form>\n            </div>\n          </div>\n        )\n    }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser, clearErrors }\n)(withRouter(Register));"]},"metadata":{},"sourceType":"module"}