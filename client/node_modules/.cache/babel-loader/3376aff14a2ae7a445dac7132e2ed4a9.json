{"ast":null,"code":"import axios from 'axios';\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\"; //Register user\n\nexport const registerUser = (userData, history, clear) => dispatch => {\n  axios.post('/users/register', userData).then(res => {\n    history.push('/login');\n    clear();\n  }) //redirect to login page after registration\n  .catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const loginUser = (userData, history) => dispatch => {\n  axios.post('/users/login', userData).then(res => {\n    const token = res.data.token;\n    localStorage.setItem('jwtToken', token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","registerUser","userData","history","clear","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","setUserLoading","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,YAAvC,QAA2D,SAA3D,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,EAAoBC,KAApB,KAA8BC,QAAQ,IAAI;AAClEV,EAAAA,KAAK,CACAW,IADL,CACU,iBADV,EAC6BJ,QAD7B,EAEKK,IAFL,CAEUC,GAAG,IAAI;AACTL,IAAAA,OAAO,CAACM,IAAR,CAAa,QAAb;AACAL,IAAAA,KAAK;AACR,GALL,EAMM;AANN,GAOKM,KAPL,CAOWC,GAAG,IACNN,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAEd,UADD;AAELe,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,GAAD,CARhB;AAaH,CAdM;AAgBP,OAAO,MAAMC,SAAS,GAAG,CAACd,QAAD,EAAWC,OAAX,KAAuBE,QAAQ,IAAI;AACxDV,EAAAA,KAAK,CACAW,IADL,CACU,cADV,EAC0BJ,QAD1B,EAEKK,IAFL,CAEUC,GAAG,IAAI;AAAA,UACDS,KADC,GACST,GAAG,CAACO,IADb,CACDE,KADC;AAETC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACArB,IAAAA,YAAY,CAACqB,KAAD,CAAZ;AACA,UAAMG,OAAO,GAAGvB,UAAU,CAACoB,KAAD,CAA1B;AACAZ,IAAAA,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR;AACH,GARL,EASKV,KATL,CASWC,GAAG,IACNN,QAAQ,CAAC;AACLO,IAAAA,IAAI,EAAEd,UADD;AAELe,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFjB,GAAD,CAVhB;AAeH,CAhBM;AAkBP,OAAO,MAAMM,cAAc,GAAGD,OAAO,IAAI;AACrC,SAAO;AACHR,IAAAA,IAAI,EAAEb,gBADH;AAEHc,IAAAA,OAAO,EAAEO;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,cAAc,GAAG,MAAM;AAChC,SAAO;AACHV,IAAAA,IAAI,EAAEZ;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMuB,UAAU,GAAG,MAAMlB,QAAQ,IAAI;AACxCa,EAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACA5B,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAS,EAAAA,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,CAJM","sourcesContent":["import axios from 'axios';\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n//Register user\nexport const registerUser = (userData, history, clear) => dispatch => {\n    axios\n        .post('/users/register', userData)\n        .then(res => {\n            history.push('/login');\n            clear();\n        }\n        ) //redirect to login page after registration\n        .catch(err => \n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n}\n\nexport const loginUser = (userData, history) => dispatch => {\n    axios\n        .post('/users/login', userData)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem('jwtToken', token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n}\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    };\n};\n\nexport const setUserLoading = () => {\n    return {\n        type: USER_LOADING\n    };\n};\n\nexport const logoutUser = () => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}))\n};\n"]},"metadata":{},"sourceType":"module"}