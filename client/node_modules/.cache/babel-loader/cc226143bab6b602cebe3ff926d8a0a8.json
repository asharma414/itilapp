{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport TicketList from './components/ticketlist';\nimport Navigation from './components/navbar';\nimport Register from './components/auth/register';\nimport Login from './components/auth/login';\nimport NewTicket from './components/newticket';\nimport ActivatedScreen from './components/activatedscreen';\nimport TicketPage from './components/ticketpage';\nimport PrivateRoute from './components/protected-route/privateroute';\nimport Page404 from './components/page404';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport bootstrap from 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: null\n    };\n  }\n\n  componentDidMount() {\n    // Check for token to keep user logged in\n    if (localStorage.jwtToken) {\n      // Set auth token header auth\n      const token = localStorage.jwtToken;\n      setAuthToken(token); // Decode token and get user info and exp\n\n      const decoded = jwt_decode(token);\n      this.setState({\n        userName: decoded.name\n      }); // Set user and isAuthenticated\n\n      store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n      const currentTime = Date.now() / 1000; // to get in milliseconds\n\n      if (decoded.exp < currentTime) {\n        // Logout user\n        store.dispatch(logoutUser()); // Redirect to login\n\n        window.location.href = \"./login\";\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      userName: this.state.userName ? this.state.userName : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      exact: true,\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      exact: true,\n      component: Register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/verify/:id\",\n      exact: true,\n      component: ActivatedScreen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/tickets/:page?\",\n      component: TicketList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/ticket/:id\",\n      component: TicketPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/mytickets\",\n      component: TicketList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/new\",\n      component: NewTicket,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      component: Page404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","Provider","store","TicketList","Navigation","Register","Login","NewTicket","ActivatedScreen","TicketPage","PrivateRoute","Page404","jwt_decode","setAuthToken","setCurrentUser","logoutUser","bootstrap","App","Component","state","userName","componentDidMount","localStorage","jwtToken","token","decoded","setState","name","dispatch","currentTime","Date","now","exp","window","location","href","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport TicketList from './components/ticketlist';\nimport Navigation from './components/navbar';\nimport Register from './components/auth/register'\nimport Login from './components/auth/login';\nimport NewTicket from './components/newticket';\nimport ActivatedScreen from './components/activatedscreen';\nimport TicketPage from './components/ticketpage';\nimport PrivateRoute  from './components/protected-route/privateroute';\nimport Page404 from './components/page404';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport bootstrap from 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\n\n\n\nexport default class App extends React.Component {\n\n  state = {\n    userName: null\n  }\n\n  componentDidMount() {\n    // Check for token to keep user logged in\n  if (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  this.setState({userName: decoded.name})\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  } \n  }\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n      <div className='container'>\n        <Router>\n          <Navigation userName={this.state.userName? this.state.userName : null} />\n          <Switch>\n              <Route path='/' exact component={Login} />\n              <Route path='/login' exact component={Login} />\n              <Route path='/register' exact component={Register} />\n              <Route path='/verify/:id' exact component={ActivatedScreen} />\n              <PrivateRoute exact path='/tickets/:page?' component={TicketList} />\n              <PrivateRoute exact path='/ticket/:id' component={TicketPage} />\n              <PrivateRoute exact path='/mytickets' component={TicketList} />\n              <PrivateRoute exact path='/new' component={NewTicket} />\n              <Route component={Page404} />\n          </Switch>\n        </Router>\n      </div>\n    </Provider>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}