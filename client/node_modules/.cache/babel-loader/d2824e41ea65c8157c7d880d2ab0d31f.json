{"ast":null,"code":"import _defineProperty from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{withRouter}from'react-router-dom';import{connect}from'react-redux';import{Link}from'react-router-dom';import{clearErrors}from'../../actions/errorActions';import{registerUser}from'../../actions/authActions';import{Button,Form}from'react-bootstrap';var Register=/*#__PURE__*/function(_Component){_inherits(Register,_Component);function Register(){var _getPrototypeOf2;var _this;_classCallCheck(this,Register);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Register)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={name:'',email:'',password:'',password2:''};_this.onChange=function(e){_this.setState(_defineProperty({},e.target.id,e.target.value));};_this.onSubmit=function(e){e.preventDefault();var newUser={name:_this.state.name,email:_this.state.email,password:_this.state.password,password2:_this.state.password2};_this.props.registerUser(newUser,_this.props.history,_this.props.clearErrors);};return _this;}_createClass(Register,[{key:\"componentDidMount\",value:function componentDidMount(){// If logged in and user navigates to Register page, should redirect them to dashboard\nif(this.props.auth.isAuthenticated){this.props.history.push('/tickets');}}},{key:\"render\",value:function render(){var errors=this.props.errors;return React.createElement(\"div\",{className:\"container mt-4\"},React.createElement(\"p\",{className:\"text-center\"},\"Already have an account? \",React.createElement(Link,{to:\"/login\"},\"Login\")),React.createElement(\"div\",{className:\"d-flex justify-content-center\"},React.createElement(Form,{onSubmit:this.onSubmit},React.createElement(Form.Group,{controlId:\"name\"},React.createElement(Form.Label,null,\"Name\"),React.createElement(\"span\",{className:\"text-danger\"},\"      \",errors.name),React.createElement(Form.Control,{value:this.state.name,onChange:this.onChange,type:\"text\",error:errors.name,autoComplete:\"off\",placeholder:\"Enter name\"})),React.createElement(Form.Group,{controlId:\"email\"},React.createElement(Form.Label,null,\"Email address\"),React.createElement(\"span\",{className:\"text-danger\"},\"      \",errors.email),React.createElement(Form.Control,{value:this.state.email,onChange:this.onChange,type:\"email\",error:errors.email,autoComplete:\"off\",placeholder:\"Enter email\"})),React.createElement(Form.Group,{controlId:\"password\"},React.createElement(Form.Label,null,\"Password\"),React.createElement(\"span\",{className:\"text-danger\"},\"      \",errors.password),React.createElement(Form.Control,{value:this.state.password,onChange:this.onChange,type:\"password\",error:errors.password,autoComplete:\"new-password\",placeholder:\"Password\"})),React.createElement(Form.Group,{controlId:\"password2\"},React.createElement(Form.Label,null,\"Confirm Password\"),React.createElement(\"span\",{className:\"text-danger\"},\"      \",errors.password2),React.createElement(Form.Control,{value:this.state.password2,onChange:this.onChange,type:\"password\",error:errors.password2,autoComplete:\"new-password\",placeholder:\"Password\"})),React.createElement(Button,{variant:\"primary\",type:\"submit\",onSubmit:this.onSubmit},\"Register\"))));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevState){if(nextProps.errors){return{errors:nextProps.errors};}}}]);return Register;}(Component);var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,errors:state.errors};};export default connect(mapStateToProps,{registerUser:registerUser,clearErrors:clearErrors})(withRouter(Register));","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/auth/register.js"],"names":["React","Component","withRouter","connect","Link","clearErrors","registerUser","Button","Form","Register","state","name","email","password","password2","onChange","e","setState","target","id","value","onSubmit","preventDefault","newUser","props","history","auth","isAuthenticated","push","errors","nextProps","prevState","mapStateToProps"],"mappings":"guBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,WAAT,KAA4B,4BAA5B,CACA,OAASC,YAAT,KAA6B,2BAA7B,CACA,OAASC,MAAT,CAAiBC,IAAjB,KAA6B,iBAA7B,C,GAIMC,CAAAA,Q,uYACJC,K,CAAQ,CACNC,IAAI,CAAE,EADA,CAENC,KAAK,CAAE,EAFD,CAGNC,QAAQ,CAAE,EAHJ,CAINC,SAAS,CAAE,EAJL,C,OAoBNC,Q,CAAW,SAAAC,CAAC,CAAI,CACZ,MAAKC,QAAL,oBAAiBD,CAAC,CAACE,MAAF,CAASC,EAA1B,CAA+BH,CAAC,CAACE,MAAF,CAASE,KAAxC,GACD,C,OACHC,Q,CAAW,SAAAL,CAAC,CAAI,CACZA,CAAC,CAACM,cAAF,GAEA,GAAMC,CAAAA,OAAO,CAAG,CACVZ,IAAI,CAAE,MAAKD,KAAL,CAAWC,IADP,CAEVC,KAAK,CAAE,MAAKF,KAAL,CAAWE,KAFR,CAGVC,QAAQ,CAAE,MAAKH,KAAL,CAAWG,QAHX,CAIVC,SAAS,CAAE,MAAKJ,KAAL,CAAWI,SAJZ,CAAhB,CAOA,MAAKU,KAAL,CAAWlB,YAAX,CAAwBiB,OAAxB,CAAiC,MAAKC,KAAL,CAAWC,OAA5C,CAAqD,MAAKD,KAAL,CAAWnB,WAAhE,EACC,C,iGA3Be,CAClB;AACA,GAAI,KAAKmB,KAAL,CAAWE,IAAX,CAAgBC,eAApB,CAAqC,CACnC,KAAKH,KAAL,CAAWC,OAAX,CAAmBG,IAAnB,CAAwB,UAAxB,EACD,CACF,C,uCAwBQ,IACGC,CAAAA,MADH,CACc,KAAKL,KADnB,CACGK,MADH,CAEL,MACE,4BAAK,SAAS,CAAC,gBAAf,EACE,yBAAG,SAAS,CAAC,aAAb,8BAAoD,oBAAC,IAAD,EAAM,EAAE,CAAC,QAAT,UAApD,CADF,CAEE,2BAAK,SAAS,CAAC,+BAAf,EACE,oBAAC,IAAD,EAAM,QAAQ,CAAE,KAAKR,QAArB,EACA,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,EACI,oBAAC,IAAD,CAAM,KAAN,aADJ,CAEI,4BAAM,SAAS,CAAC,aAAhB,WAAqCQ,MAAM,CAAClB,IAA5C,CAFJ,CAGI,oBAAC,IAAD,CAAM,OAAN,EAAc,KAAK,CAAE,KAAKD,KAAL,CAAWC,IAAhC,CAAsC,QAAQ,CAAE,KAAKI,QAArD,CAA+D,IAAI,CAAC,MAApE,CAA2E,KAAK,CAAEc,MAAM,CAAClB,IAAzF,CAA+F,YAAY,CAAC,KAA5G,CAAkH,WAAW,CAAC,YAA9H,EAHJ,CADA,CAMA,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,OAAtB,EACI,oBAAC,IAAD,CAAM,KAAN,sBADJ,CAEI,4BAAM,SAAS,CAAC,aAAhB,WAAqCkB,MAAM,CAACjB,KAA5C,CAFJ,CAGI,oBAAC,IAAD,CAAM,OAAN,EAAc,KAAK,CAAE,KAAKF,KAAL,CAAWE,KAAhC,CAAuC,QAAQ,CAAE,KAAKG,QAAtD,CAAgE,IAAI,CAAC,OAArE,CAA6E,KAAK,CAAEc,MAAM,CAACjB,KAA3F,CAAkG,YAAY,CAAC,KAA/G,CAAqH,WAAW,CAAC,aAAjI,EAHJ,CANA,CAWA,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,UAAtB,EACI,oBAAC,IAAD,CAAM,KAAN,iBADJ,CAEI,4BAAM,SAAS,CAAC,aAAhB,WAAqCiB,MAAM,CAAChB,QAA5C,CAFJ,CAGI,oBAAC,IAAD,CAAM,OAAN,EAAc,KAAK,CAAE,KAAKH,KAAL,CAAWG,QAAhC,CAA0C,QAAQ,CAAE,KAAKE,QAAzD,CAAmE,IAAI,CAAC,UAAxE,CAAmF,KAAK,CAAEc,MAAM,CAAChB,QAAjG,CAA2G,YAAY,CAAC,cAAxH,CAAuI,WAAW,CAAC,UAAnJ,EAHJ,CAXA,CAgBA,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,WAAtB,EACI,oBAAC,IAAD,CAAM,KAAN,yBADJ,CAEI,4BAAM,SAAS,CAAC,aAAhB,WAAqCgB,MAAM,CAACf,SAA5C,CAFJ,CAGI,oBAAC,IAAD,CAAM,OAAN,EAAc,KAAK,CAAE,KAAKJ,KAAL,CAAWI,SAAhC,CAA2C,QAAQ,CAAE,KAAKC,QAA1D,CAAoE,IAAI,CAAC,UAAzE,CAAoF,KAAK,CAAEc,MAAM,CAACf,SAAlG,CAA6G,YAAY,CAAC,cAA1H,CAAyI,WAAW,CAAC,UAArJ,EAHJ,CAhBA,CAqBA,oBAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,IAAI,CAAC,QAA/B,CAAwC,QAAQ,CAAE,KAAKO,QAAvD,aArBA,CADF,CAFF,CADF,CA8BH,C,4EAtD+BS,S,CAAWC,S,CAAW,CACpD,GAAID,SAAS,CAACD,MAAd,CAAsB,CACpB,MAAO,CAAEA,MAAM,CAAEC,SAAS,CAACD,MAApB,CAAP,CACD,CACF,C,sBAnBkB5B,S,EA+EvB,GAAM+B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAtB,KAAK,QAAK,CAChCgB,IAAI,CAAEhB,KAAK,CAACgB,IADoB,CAEhCG,MAAM,CAAEnB,KAAK,CAACmB,MAFkB,CAAL,EAA7B,CAKA,cAAe1B,CAAAA,OAAO,CACpB6B,eADoB,CAEpB,CAAE1B,YAAY,CAAZA,YAAF,CAAgBD,WAAW,CAAXA,WAAhB,CAFoB,CAAP,CAGbH,UAAU,CAACO,QAAD,CAHG,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { clearErrors } from '../../actions/errorActions';\nimport { registerUser } from '../../actions/authActions';\nimport { Button, Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\n\nclass Register extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  };\n\n    componentDidMount() {\n      // If logged in and user navigates to Register page, should redirect them to dashboard\n      if (this.props.auth.isAuthenticated) {\n        this.props.history.push('/tickets');\n      }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.errors) {\n        return { errors: nextProps.errors }\n      }\n    }\n  \n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n      };\n    onSubmit = e => {\n        e.preventDefault();\n        \n        const newUser = {\n              name: this.state.name,\n              email: this.state.email,\n              password: this.state.password,\n              password2: this.state.password2\n        };\n            \n        this.props.registerUser(newUser, this.props.history, this.props.clearErrors);\n        };\n\n    render() {\n        const { errors } = this.props;\n        return (\n          <div className='container mt-4'>\n            <p className='text-center'>Already have an account? <Link to='/login'>Login</Link></p>\n            <div className='d-flex justify-content-center'>\n              <Form onSubmit={this.onSubmit}>\n              <Form.Group controlId='name'>\n                  <Form.Label>Name</Form.Label>\n                  <span className='text-danger'>      {errors.name}</span>\n                  <Form.Control value={this.state.name} onChange={this.onChange} type='text' error={errors.name} autoComplete='off' placeholder='Enter name' />\n              </Form.Group>\n              <Form.Group controlId=\"email\">\n                  <Form.Label>Email address</Form.Label>\n                  <span className='text-danger'>      {errors.email}</span>\n                  <Form.Control value={this.state.email} onChange={this.onChange} type=\"email\" error={errors.email} autoComplete='off' placeholder=\"Enter email\" />\n              </Form.Group>\n              <Form.Group controlId=\"password\">\n                  <Form.Label>Password</Form.Label>\n                  <span className='text-danger'>      {errors.password}</span>\n                  <Form.Control value={this.state.password} onChange={this.onChange} type=\"password\" error={errors.password} autoComplete='new-password' placeholder=\"Password\" />\n              </Form.Group>\n              <Form.Group controlId=\"password2\">\n                  <Form.Label>Confirm Password</Form.Label>\n                  <span className='text-danger'>      {errors.password2}</span>\n                  <Form.Control value={this.state.password2} onChange={this.onChange} type=\"password\" error={errors.password2} autoComplete='new-password' placeholder=\"Password\" />\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\" onSubmit={this.onSubmit}>Register</Button>\n              </Form>\n            </div>\n          </div>\n        )\n    }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser, clearErrors }\n)(withRouter(Register));"]},"metadata":{},"sourceType":"module"}