{"ast":null,"code":"var _jsxFileName = \"/Users/abhinav/Desktop/itilapp/client/src/components/newticket.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { newTicket } from '../actions/ticketActions';\nimport { findUser } from '../actions/userActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\n\nclass NewTicket extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      status: 'New',\n      description: '',\n      customerName: '',\n      customerContact: '',\n      assignedTo: '',\n      userList: [],\n      errors: {}\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.ticketSubmit = async e => {\n      const user = this.props.auth.user;\n      e.preventDefault();\n\n      if (this.state.title.length > 0 && this.state.description.length > 0) {\n        const newTicket = {\n          title: this.state.title,\n          description: this.state.description,\n          status: this.state.status,\n          customer: {\n            name: this.state.customerName,\n            contact: this.state.customerContact\n          },\n          author: {\n            id: user.id,\n            name: user.name\n          }\n        };\n        await this.props.newTicket(newTicket); //this.props.history.push('/tickets');\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.findUser(this.state.assignedTo);\n    this.setState({\n      userList: this.props.user.users\n    });\n  } // onKeyUp = (e) => {\n  //     this.props.findUser(this.state.assignedTo);\n  //     this.setState({ userList: this.props.user.users })\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.userList.map(user => React.createElement(\"datalist\", {\n      key: \"0\",\n      id: \"datalist1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      key: user._id,\n      value: user.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), React.createElement(Form, {\n      className: \"my-4\",\n      onSubmit: this.ticketSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Form.Control, {\n      type: \"text\",\n      onChange: this.onChange,\n      value: this.state.title,\n      placeholder: \"Ticket Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"assignedTo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Assigned To\"), React.createElement(Form.Control, {\n      list: \"datalist1\",\n      type: \"select\",\n      onChange: this.onChange,\n      value: this.state.assignedTo,\n      placeholder: \"Assign to user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"customerName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Customer Name\"), React.createElement(Form.Control, {\n      type: \"text\",\n      onChange: this.onChange,\n      value: this.state.customerName,\n      placeholder: \"Customer's Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"customerContact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Customer Contact\"), React.createElement(Form.Control, {\n      type: \"text\",\n      onChange: this.onChange,\n      value: this.state.customerContact,\n      placeholder: \"Customer's Contact Info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Status\"), React.createElement(Form.Control, {\n      as: \"select\",\n      value: this.state.newStatus,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"New\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Awaiting Customer Feedback\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"In Progress\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Cancelled\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Resolved\"))))), React.createElement(Form.Group, {\n      controlId: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      value: this.state.description,\n      onChange: this.onChange,\n      placeholder: \"Ticket description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nNewTicket.propTypes = {\n  auth: PropTypes.object.isRequired,\n  newTicket: PropTypes.func.isRequired,\n  findUser: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  user: state.user\n});\n\nexport default connect(mapStateToProps, {\n  newTicket,\n  findUser\n})(NewTicket);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/newticket.js"],"names":["React","Component","connect","newTicket","findUser","PropTypes","Form","Button","Row","Col","NewTicket","state","title","status","description","customerName","customerContact","assignedTo","userList","errors","onChange","e","setState","target","id","value","ticketSubmit","user","props","auth","preventDefault","length","customer","name","contact","author","componentDidMount","users","render","map","_id","newStatus","propTypes","object","isRequired","func","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC;;AAEA,MAAMC,SAAN,SAAwBT,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BU,KAD8B,GACtB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,MAAM,EAAE,KAFJ;AAGJC,MAAAA,WAAW,EAAE,EAHT;AAIJC,MAAAA,YAAY,EAAE,EAJV;AAKJC,MAAAA,eAAe,EAAE,EALb;AAMJC,MAAAA,UAAU,EAAE,EANR;AAOJC,MAAAA,QAAQ,EAAE,EAPN;AAQJC,MAAAA,MAAM,EAAE;AARJ,KADsB;;AAAA,SAsB9BC,QAtB8B,GAsBlBC,CAAD,IAAO;AACd,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAgBH,CAAC,CAACE,MAAF,CAASE;AAA3B,OAAd;AACH,KAxB6B;;AAAA,SA0B9BC,YA1B8B,GA0Bf,MAAOL,CAAP,IAAa;AAAA,YAChBM,IADgB,GACP,KAAKC,KAAL,CAAWC,IADJ,CAChBF,IADgB;AAExBN,MAAAA,CAAC,CAACS,cAAF;;AACA,UAAI,KAAKnB,KAAL,CAAWC,KAAX,CAAiBmB,MAAjB,GAA0B,CAA1B,IAA+B,KAAKpB,KAAL,CAAWG,WAAX,CAAuBiB,MAAvB,GAAgC,CAAnE,EAAqE;AACjE,cAAM5B,SAAS,GAAG;AACdS,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KADJ;AAEdE,UAAAA,WAAW,EAAE,KAAKH,KAAL,CAAWG,WAFV;AAGdD,UAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MAHL;AAIdmB,UAAAA,QAAQ,EAAE;AACNC,YAAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWI,YADX;AAENmB,YAAAA,OAAO,EAAE,KAAKvB,KAAL,CAAWK;AAFd,WAJI;AAQdmB,UAAAA,MAAM,EAAE;AACJX,YAAAA,EAAE,EAAEG,IAAI,CAACH,EADL;AAEJS,YAAAA,IAAI,EAAEN,IAAI,CAACM;AAFP;AARM,SAAlB;AAaA,cAAM,KAAKL,KAAL,CAAWzB,SAAX,CAAqBA,SAArB,CAAN,CAdiE,CAejE;AACH;AACJ,KA9C6B;AAAA;;AAY9BiC,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,KAAL,CAAWxB,QAAX,CAAoB,KAAKO,KAAL,CAAWM,UAA/B;AACA,SAAKK,QAAL,CAAc;AAAEJ,MAAAA,QAAQ,EAAE,KAAKU,KAAL,CAAWD,IAAX,CAAgBU;AAA5B,KAAd;AACH,GAf6B,CAiB9B;AACA;AACA;AACA;;;AA4BAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAK3B,KAAL,CAAWO,QAAX,CAAoBqB,GAApB,CAAwBZ,IAAI,IAC5B;AAAU,MAAA,GAAG,EAAC,GAAd;AAAkB,MAAA,EAAE,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAEA,IAAI,CAACa,GAAlB;AAAuB,MAAA,KAAK,EAAEb,IAAI,CAACM,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADA,CAFR,EAOI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAE,KAAKP,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,QAAQ,EAAE,KAAKN,QAAzC;AAAmD,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,KAArE;AAA4E,MAAA,WAAW,EAAC,cAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAKI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAe,MAAA,IAAI,EAAC,WAApB;AAAgC,MAAA,IAAI,EAAC,QAArC;AAA8C,MAAA,QAAQ,EAAE,KAAKQ,QAA7D;AAAuE,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWM,UAAzF;AAAqG,MAAA,WAAW,EAAC,gBAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALJ,EASA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,QAAQ,EAAE,KAAKG,QAAzC;AAAmD,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWI,YAArE;AAAmF,MAAA,WAAW,EAAC,iBAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ,EAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,QAAQ,EAAE,KAAKK,QAAzC;AAAmD,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWK,eAArE;AAAsF,MAAA,WAAW,EAAC,yBAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CAPJ,CATA,EAuBA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,QAAjB;AAA0B,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAW8B,SAA5C;AAAuD,MAAA,QAAQ,EAAE,KAAKrB,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,CAFJ,CADJ,CADJ,CAvBA,EAqCA,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,EAAE,EAAC,UAAjB;AAA4B,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWG,WAA9C;AAA2D,MAAA,QAAQ,EAAE,KAAKM,QAA1E;AAAoF,MAAA,WAAW,EAAC,oBAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CArCA,EAyCA,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzCA,CAPJ,CADJ;AAqDH;;AAtG6B;;AAyGlCV,SAAS,CAACgC,SAAV,GAAsB;AAClBb,EAAAA,IAAI,EAAExB,SAAS,CAACsC,MAAV,CAAiBC,UADL;AAElBzC,EAAAA,SAAS,EAAEE,SAAS,CAACwC,IAAV,CAAeD,UAFR;AAGlBxC,EAAAA,QAAQ,EAAEC,SAAS,CAACwC,IAAV,CAAeD;AAHP,CAAtB;;AAMA,MAAME,eAAe,GAAInC,KAAD,KAAY;AAChCkB,EAAAA,IAAI,EAAElB,KAAK,CAACkB,IADoB;AAEhCF,EAAAA,IAAI,EAAEhB,KAAK,CAACgB;AAFoB,CAAZ,CAAxB;;AAKA,eAAezB,OAAO,CAAC4C,eAAD,EAAkB;AAAE3C,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAlB,CAAP,CAAkDM,SAAlD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { newTicket } from '../actions/ticketActions';\nimport { findUser } from '../actions/userActions';\nimport PropTypes from 'prop-types';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\n\nclass NewTicket extends Component {\n    state = {\n        title: '',\n        status: 'New',\n        description: '',\n        customerName: '',\n        customerContact: '',\n        assignedTo: '',\n        userList: [],\n        errors: {}\n    }\n\n    componentDidMount() {\n        this.props.findUser(this.state.assignedTo);\n        this.setState({ userList: this.props.user.users });\n    }\n\n    // onKeyUp = (e) => {\n    //     this.props.findUser(this.state.assignedTo);\n    //     this.setState({ userList: this.props.user.users })\n    // }\n\n    onChange = (e) => {\n        this.setState({ [e.target.id] : e.target.value })\n    }\n\n    ticketSubmit = async (e) => {\n        const { user } = this.props.auth;\n        e.preventDefault();\n        if (this.state.title.length > 0 && this.state.description.length > 0){\n            const newTicket = {\n                title: this.state.title,\n                description: this.state.description,\n                status: this.state.status,\n                customer: {\n                    name: this.state.customerName,\n                    contact: this.state.customerContact\n                },\n                author: {\n                    id: user.id,\n                    name: user.name\n                }\n            }\n            await this.props.newTicket(newTicket);\n            //this.props.history.push('/tickets');\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.userList.map(user => (\n                    <datalist key='0' id='datalist1'>\n                        <option key={user._id} value={user.name}></option>\n                    </datalist>\n                ))}\n                <Form className='my-4' onSubmit={this.ticketSubmit}>\n                    <Form.Group controlId=\"title\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control type='text' onChange={this.onChange} value={this.state.title} placeholder=\"Ticket Title\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"assignedTo\">\n                        <Form.Label>Assigned To</Form.Label>\n                        <Form.Control  list='datalist1' type='select' onChange={this.onChange} value={this.state.assignedTo} placeholder=\"Assign to user\" />\n                    </Form.Group>\n                <Row>\n                    <Col>\n                        <Form.Group controlId=\"customerName\">\n                            <Form.Label>Customer Name</Form.Label>\n                            <Form.Control type='text' onChange={this.onChange} value={this.state.customerName} placeholder=\"Customer's Name\" />\n                        </Form.Group>\n                    </Col>\n                    <Col>\n                        <Form.Group controlId=\"customerContact\">\n                            <Form.Label>Customer Contact</Form.Label>\n                            <Form.Control type='text' onChange={this.onChange} value={this.state.customerContact} placeholder=\"Customer's Contact Info\" />\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <Form.Group controlId='status'>\n                            <Form.Label>Status</Form.Label>\n                            <Form.Control as='select' value={this.state.newStatus} onChange={this.onChange}>\n                                <option>New</option>\n                                <option>Awaiting Customer Feedback</option>\n                                <option>In Progress</option>\n                                <option>Cancelled</option>\n                                <option>Resolved</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Form.Group controlId=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control as='textarea' value={this.state.description} onChange={this.onChange} placeholder=\"Ticket description\" />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Form>\n        </div>\n        )\n    }\n}\n\nNewTicket.propTypes = {\n    auth: PropTypes.object.isRequired,\n    newTicket: PropTypes.func.isRequired,\n    findUser: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    user: state.user\n});\n\nexport default connect(mapStateToProps, { newTicket, findUser })(NewTicket)"]},"metadata":{},"sourceType":"module"}