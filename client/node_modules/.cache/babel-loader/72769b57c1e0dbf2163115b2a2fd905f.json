{"ast":null,"code":"import _defineProperty from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/abhinav/Desktop/itilapp/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import{Link}from'react-router-dom';import{loginUser}from'../../actions/authActions';import{clearErrors}from'../../actions/errorActions';import{Button,Form}from'react-bootstrap';var Login=/*#__PURE__*/function(_Component){_inherits(Login,_Component);function Login(){var _getPrototypeOf2;var _this;_classCallCheck(this,Login);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Login)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={email:'',password:''};_this.onChange=function(e){_this.setState(_defineProperty({},e.target.id,e.target.value));};_this.onSubmit=function(e){e.preventDefault();var userData={email:_this.state.email,password:_this.state.password};_this.props.loginUser(userData);};return _this;}_createClass(Login,[{key:\"componentDidMount\",value:function componentDidMount(){// If logged in and user navigates to Login page, should redirect them to dashboard\nif(this.props.auth.isAuthenticated){this.props.history.push('/tickets');}}},{key:\"render\",value:function render(){var errors=this.props.errors;return React.createElement(\"div\",{className:\"container mt-4\"},React.createElement(\"p\",{className:\"text-center\"},\"Don't have an account? \",React.createElement(Link,{to:\"/register\"},\"Register\")),React.createElement(\"div\",{className:\"d-flex justify-content-center\"},React.createElement(Form,{onSubmit:this.onSubmit},React.createElement(Form.Group,{controlId:\"email\"},React.createElement(Form.Label,null,\"Email address\"),React.createElement(\"span\",{className:\"text-danger\"},\"     \",errors.email,errors.emailnotfound),React.createElement(Form.Control,{value:this.state.email,onChange:this.onChange,type:\"email\",error:errors.email,autoComplete:\"email\",placeholder:\"Enter email\"})),React.createElement(Form.Group,{controlId:\"password\"},React.createElement(Form.Label,null,\"Password\"),React.createElement(\"span\",{className:\"text-danger\"},\"     \",errors.password,errors.passwordincorrect),React.createElement(Form.Control,{onChange:this.onChange,type:\"password\",error:errors.password,autoComplete:\"current-password\",placeholder:\"Password\"})),React.createElement(Button,{variant:\"primary\",type:\"submit\"},\"Login\"))));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevState){if(nextProps.auth.isAuthenticated){nextProps.clearErrors();nextProps.history.push('/tickets');// push user to dashboard when they login\n};return null;}}]);return Login;}(Component);var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,errors:state.errors};};export default connect(mapStateToProps,{clearErrors:clearErrors,loginUser:loginUser})(Login);","map":{"version":3,"sources":["/Users/abhinav/Desktop/itilapp/client/src/components/auth/login.js"],"names":["React","Component","connect","Link","loginUser","clearErrors","Button","Form","Login","state","email","password","onChange","e","setState","target","id","value","onSubmit","preventDefault","userData","props","auth","isAuthenticated","history","push","errors","emailnotfound","passwordincorrect","nextProps","prevState","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { loginUser } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\nimport PropTypes from 'prop-types';\nimport { Button, Form } from 'react-bootstrap';\n\n\nclass Login extends Component {\n        state = {\n          email: '',\n          password: ''\n        };\n\n      componentDidMount() {\n        // If logged in and user navigates to Login page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n          this.props.history.push('/tickets');\n        }\n      }\n      \n      static getDerivedStateFromProps(nextProps, prevState) {\n        if (nextProps.auth.isAuthenticated) {\n          nextProps.clearErrors();\n          nextProps.history.push('/tickets'); // push user to dashboard when they login\n        };\n        return null;\n      }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n      };\n    onSubmit = e => {\n        e.preventDefault();\n    const userData = {\n          email: this.state.email,\n          password: this.state.password,\n        };\n        this.props.loginUser(userData);\n      };\n\n    render() {\n        const { errors } = this.props;\n        return (\n            <div className='container mt-4'>\n              <p className='text-center'>Don't have an account? <Link to='/register'>Register</Link></p>\n              <div className='d-flex justify-content-center'>\n                  <Form onSubmit={this.onSubmit}>\n                  <Form.Group controlId='email'>\n                      <Form.Label>Email address</Form.Label>\n                      <span className='text-danger'>     {errors.email}{errors.emailnotfound}</span>\n                      <Form.Control value={this.state.email} onChange={this.onChange} type='email' error={errors.email} autoComplete='email' placeholder=\"Enter email\" />\n                  </Form.Group>\n                  <Form.Group controlId=\"password\">\n                      <Form.Label>Password</Form.Label>\n                      <span className='text-danger'>     {errors.password}{errors.passwordincorrect}</span>\n                      <Form.Control onChange={this.onChange} type='password' error={errors.password} autoComplete='current-password' placeholder=\"Password\" />\n                  </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\">Login</Button>\n                </Form>\n              </div>\n          </div>\n        )\n    }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { clearErrors, loginUser }\n)(Login);"]},"metadata":{},"sourceType":"module"}